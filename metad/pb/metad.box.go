// Code generated by protoc-gen-box. DO NOT EDIT.
// source: metad.proto

package metad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	tr "github.com/tddhit/box/transport"
	tropt "github.com/tddhit/box/transport/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	context1 "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterClientReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterClientReq) Reset()         { *m = RegisterClientReq{} }
func (m *RegisterClientReq) String() string { return proto.CompactTextString(m) }
func (*RegisterClientReq) ProtoMessage()    {}
func (*RegisterClientReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{0}
}
func (m *RegisterClientReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientReq.Unmarshal(m, b)
}
func (m *RegisterClientReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientReq.Marshal(b, m, deterministic)
}
func (dst *RegisterClientReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientReq.Merge(dst, src)
}
func (m *RegisterClientReq) XXX_Size() int {
	return xxx_messageInfo_RegisterClientReq.Size(m)
}
func (m *RegisterClientReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientReq proto.InternalMessageInfo

func (m *RegisterClientReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type RegisterClientRsp struct {
	Groups               []*RegisterClientRsp_ShardGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RegisterClientRsp) Reset()         { *m = RegisterClientRsp{} }
func (m *RegisterClientRsp) String() string { return proto.CompactTextString(m) }
func (*RegisterClientRsp) ProtoMessage()    {}
func (*RegisterClientRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{1}
}
func (m *RegisterClientRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientRsp.Unmarshal(m, b)
}
func (m *RegisterClientRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientRsp.Marshal(b, m, deterministic)
}
func (dst *RegisterClientRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientRsp.Merge(dst, src)
}
func (m *RegisterClientRsp) XXX_Size() int {
	return xxx_messageInfo_RegisterClientRsp.Size(m)
}
func (m *RegisterClientRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientRsp proto.InternalMessageInfo

func (m *RegisterClientRsp) GetGroups() []*RegisterClientRsp_ShardGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type RegisterClientRsp_ShardGroup struct {
	Replicas             []*RegisterClientRsp_Shard `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RegisterClientRsp_ShardGroup) Reset()         { *m = RegisterClientRsp_ShardGroup{} }
func (m *RegisterClientRsp_ShardGroup) String() string { return proto.CompactTextString(m) }
func (*RegisterClientRsp_ShardGroup) ProtoMessage()    {}
func (*RegisterClientRsp_ShardGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{1, 0}
}
func (m *RegisterClientRsp_ShardGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientRsp_ShardGroup.Unmarshal(m, b)
}
func (m *RegisterClientRsp_ShardGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientRsp_ShardGroup.Marshal(b, m, deterministic)
}
func (dst *RegisterClientRsp_ShardGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientRsp_ShardGroup.Merge(dst, src)
}
func (m *RegisterClientRsp_ShardGroup) XXX_Size() int {
	return xxx_messageInfo_RegisterClientRsp_ShardGroup.Size(m)
}
func (m *RegisterClientRsp_ShardGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientRsp_ShardGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientRsp_ShardGroup proto.InternalMessageInfo

func (m *RegisterClientRsp_ShardGroup) GetReplicas() []*RegisterClientRsp_Shard {
	if m != nil {
		return m.Replicas
	}
	return nil
}

type RegisterClientRsp_Shard struct {
	NodeAddr             string   `protobuf:"bytes,1,opt,name=nodeAddr,proto3" json:"nodeAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterClientRsp_Shard) Reset()         { *m = RegisterClientRsp_Shard{} }
func (m *RegisterClientRsp_Shard) String() string { return proto.CompactTextString(m) }
func (*RegisterClientRsp_Shard) ProtoMessage()    {}
func (*RegisterClientRsp_Shard) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{1, 1}
}
func (m *RegisterClientRsp_Shard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientRsp_Shard.Unmarshal(m, b)
}
func (m *RegisterClientRsp_Shard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientRsp_Shard.Marshal(b, m, deterministic)
}
func (dst *RegisterClientRsp_Shard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientRsp_Shard.Merge(dst, src)
}
func (m *RegisterClientRsp_Shard) XXX_Size() int {
	return xxx_messageInfo_RegisterClientRsp_Shard.Size(m)
}
func (m *RegisterClientRsp_Shard) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientRsp_Shard.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientRsp_Shard proto.InternalMessageInfo

func (m *RegisterClientRsp_Shard) GetNodeAddr() string {
	if m != nil {
		return m.NodeAddr
	}
	return ""
}

type RegisterNodeReq struct {
	Addr                 string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	AdminAddr            string                 `protobuf:"bytes,2,opt,name=adminAddr,proto3" json:"adminAddr,omitempty"`
	Shard                *RegisterNodeReq_Shard `protobuf:"bytes,3,opt,name=shard,proto3" json:"shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterNodeReq) Reset()         { *m = RegisterNodeReq{} }
func (m *RegisterNodeReq) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeReq) ProtoMessage()    {}
func (*RegisterNodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{2}
}
func (m *RegisterNodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeReq.Unmarshal(m, b)
}
func (m *RegisterNodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeReq.Marshal(b, m, deterministic)
}
func (dst *RegisterNodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeReq.Merge(dst, src)
}
func (m *RegisterNodeReq) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeReq.Size(m)
}
func (m *RegisterNodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeReq proto.InternalMessageInfo

func (m *RegisterNodeReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *RegisterNodeReq) GetAdminAddr() string {
	if m != nil {
		return m.AdminAddr
	}
	return ""
}

func (m *RegisterNodeReq) GetShard() *RegisterNodeReq_Shard {
	if m != nil {
		return m.Shard
	}
	return nil
}

type RegisterNodeReq_Shard struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id                   uint32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ReplicaID            uint32   `protobuf:"varint,3,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeReq_Shard) Reset()         { *m = RegisterNodeReq_Shard{} }
func (m *RegisterNodeReq_Shard) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeReq_Shard) ProtoMessage()    {}
func (*RegisterNodeReq_Shard) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{2, 0}
}
func (m *RegisterNodeReq_Shard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeReq_Shard.Unmarshal(m, b)
}
func (m *RegisterNodeReq_Shard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeReq_Shard.Marshal(b, m, deterministic)
}
func (dst *RegisterNodeReq_Shard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeReq_Shard.Merge(dst, src)
}
func (m *RegisterNodeReq_Shard) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeReq_Shard.Size(m)
}
func (m *RegisterNodeReq_Shard) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeReq_Shard.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeReq_Shard proto.InternalMessageInfo

func (m *RegisterNodeReq_Shard) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RegisterNodeReq_Shard) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RegisterNodeReq_Shard) GetReplicaID() uint32 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

type RegisterNodeRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeRsp) Reset()         { *m = RegisterNodeRsp{} }
func (m *RegisterNodeRsp) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRsp) ProtoMessage()    {}
func (*RegisterNodeRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{3}
}
func (m *RegisterNodeRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRsp.Unmarshal(m, b)
}
func (m *RegisterNodeRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRsp.Marshal(b, m, deterministic)
}
func (dst *RegisterNodeRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRsp.Merge(dst, src)
}
func (m *RegisterNodeRsp) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRsp.Size(m)
}
func (m *RegisterNodeRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRsp proto.InternalMessageInfo

type CreateNamespaceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ShardNum             uint32   `protobuf:"varint,2,opt,name=shardNum,proto3" json:"shardNum,omitempty"`
	ReplicaFactor        uint32   `protobuf:"varint,3,opt,name=replicaFactor,proto3" json:"replicaFactor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceReq) Reset()         { *m = CreateNamespaceReq{} }
func (m *CreateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceReq) ProtoMessage()    {}
func (*CreateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{4}
}
func (m *CreateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceReq.Unmarshal(m, b)
}
func (m *CreateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceReq.Marshal(b, m, deterministic)
}
func (dst *CreateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceReq.Merge(dst, src)
}
func (m *CreateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceReq.Size(m)
}
func (m *CreateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceReq proto.InternalMessageInfo

func (m *CreateNamespaceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateNamespaceReq) GetShardNum() uint32 {
	if m != nil {
		return m.ShardNum
	}
	return 0
}

func (m *CreateNamespaceReq) GetReplicaFactor() uint32 {
	if m != nil {
		return m.ReplicaFactor
	}
	return 0
}

type CreateNamespaceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceRsp) Reset()         { *m = CreateNamespaceRsp{} }
func (m *CreateNamespaceRsp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceRsp) ProtoMessage()    {}
func (*CreateNamespaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{5}
}
func (m *CreateNamespaceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceRsp.Unmarshal(m, b)
}
func (m *CreateNamespaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceRsp.Marshal(b, m, deterministic)
}
func (dst *CreateNamespaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceRsp.Merge(dst, src)
}
func (m *CreateNamespaceRsp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceRsp.Size(m)
}
func (m *CreateNamespaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceRsp proto.InternalMessageInfo

type DropNamespaceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropNamespaceReq) Reset()         { *m = DropNamespaceReq{} }
func (m *DropNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*DropNamespaceReq) ProtoMessage()    {}
func (*DropNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{6}
}
func (m *DropNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropNamespaceReq.Unmarshal(m, b)
}
func (m *DropNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropNamespaceReq.Marshal(b, m, deterministic)
}
func (dst *DropNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropNamespaceReq.Merge(dst, src)
}
func (m *DropNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_DropNamespaceReq.Size(m)
}
func (m *DropNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DropNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DropNamespaceReq proto.InternalMessageInfo

func (m *DropNamespaceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type DropNamespaceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropNamespaceRsp) Reset()         { *m = DropNamespaceRsp{} }
func (m *DropNamespaceRsp) String() string { return proto.CompactTextString(m) }
func (*DropNamespaceRsp) ProtoMessage()    {}
func (*DropNamespaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{7}
}
func (m *DropNamespaceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropNamespaceRsp.Unmarshal(m, b)
}
func (m *DropNamespaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropNamespaceRsp.Marshal(b, m, deterministic)
}
func (dst *DropNamespaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropNamespaceRsp.Merge(dst, src)
}
func (m *DropNamespaceRsp) XXX_Size() int {
	return xxx_messageInfo_DropNamespaceRsp.Size(m)
}
func (m *DropNamespaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DropNamespaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DropNamespaceRsp proto.InternalMessageInfo

type AddNodeToNamespaceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	AdminAddr            string   `protobuf:"bytes,3,opt,name=adminAddr,proto3" json:"adminAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeToNamespaceReq) Reset()         { *m = AddNodeToNamespaceReq{} }
func (m *AddNodeToNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*AddNodeToNamespaceReq) ProtoMessage()    {}
func (*AddNodeToNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{8}
}
func (m *AddNodeToNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeToNamespaceReq.Unmarshal(m, b)
}
func (m *AddNodeToNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeToNamespaceReq.Marshal(b, m, deterministic)
}
func (dst *AddNodeToNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeToNamespaceReq.Merge(dst, src)
}
func (m *AddNodeToNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_AddNodeToNamespaceReq.Size(m)
}
func (m *AddNodeToNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeToNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeToNamespaceReq proto.InternalMessageInfo

func (m *AddNodeToNamespaceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *AddNodeToNamespaceReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AddNodeToNamespaceReq) GetAdminAddr() string {
	if m != nil {
		return m.AdminAddr
	}
	return ""
}

type AddNodeToNamespaceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeToNamespaceRsp) Reset()         { *m = AddNodeToNamespaceRsp{} }
func (m *AddNodeToNamespaceRsp) String() string { return proto.CompactTextString(m) }
func (*AddNodeToNamespaceRsp) ProtoMessage()    {}
func (*AddNodeToNamespaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{9}
}
func (m *AddNodeToNamespaceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeToNamespaceRsp.Unmarshal(m, b)
}
func (m *AddNodeToNamespaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeToNamespaceRsp.Marshal(b, m, deterministic)
}
func (dst *AddNodeToNamespaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeToNamespaceRsp.Merge(dst, src)
}
func (m *AddNodeToNamespaceRsp) XXX_Size() int {
	return xxx_messageInfo_AddNodeToNamespaceRsp.Size(m)
}
func (m *AddNodeToNamespaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeToNamespaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeToNamespaceRsp proto.InternalMessageInfo

type RemoveNodeFromNamespaceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeFromNamespaceReq) Reset()         { *m = RemoveNodeFromNamespaceReq{} }
func (m *RemoveNodeFromNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeFromNamespaceReq) ProtoMessage()    {}
func (*RemoveNodeFromNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{10}
}
func (m *RemoveNodeFromNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeFromNamespaceReq.Unmarshal(m, b)
}
func (m *RemoveNodeFromNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeFromNamespaceReq.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeFromNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeFromNamespaceReq.Merge(dst, src)
}
func (m *RemoveNodeFromNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeFromNamespaceReq.Size(m)
}
func (m *RemoveNodeFromNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeFromNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeFromNamespaceReq proto.InternalMessageInfo

func (m *RemoveNodeFromNamespaceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RemoveNodeFromNamespaceReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type RemoveNodeFromNamespaceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeFromNamespaceRsp) Reset()         { *m = RemoveNodeFromNamespaceRsp{} }
func (m *RemoveNodeFromNamespaceRsp) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeFromNamespaceRsp) ProtoMessage()    {}
func (*RemoveNodeFromNamespaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{11}
}
func (m *RemoveNodeFromNamespaceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeFromNamespaceRsp.Unmarshal(m, b)
}
func (m *RemoveNodeFromNamespaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeFromNamespaceRsp.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeFromNamespaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeFromNamespaceRsp.Merge(dst, src)
}
func (m *RemoveNodeFromNamespaceRsp) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeFromNamespaceRsp.Size(m)
}
func (m *RemoveNodeFromNamespaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeFromNamespaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeFromNamespaceRsp proto.InternalMessageInfo

type ReplaceNodeInNamespaceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OldAddr              string   `protobuf:"bytes,2,opt,name=oldAddr,proto3" json:"oldAddr,omitempty"`
	NewAddr              string   `protobuf:"bytes,3,opt,name=newAddr,proto3" json:"newAddr,omitempty"`
	NewAdminAddr         string   `protobuf:"bytes,4,opt,name=newAdminAddr,proto3" json:"newAdminAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceNodeInNamespaceReq) Reset()         { *m = ReplaceNodeInNamespaceReq{} }
func (m *ReplaceNodeInNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*ReplaceNodeInNamespaceReq) ProtoMessage()    {}
func (*ReplaceNodeInNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{12}
}
func (m *ReplaceNodeInNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceNodeInNamespaceReq.Unmarshal(m, b)
}
func (m *ReplaceNodeInNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceNodeInNamespaceReq.Marshal(b, m, deterministic)
}
func (dst *ReplaceNodeInNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceNodeInNamespaceReq.Merge(dst, src)
}
func (m *ReplaceNodeInNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_ReplaceNodeInNamespaceReq.Size(m)
}
func (m *ReplaceNodeInNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceNodeInNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceNodeInNamespaceReq proto.InternalMessageInfo

func (m *ReplaceNodeInNamespaceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ReplaceNodeInNamespaceReq) GetOldAddr() string {
	if m != nil {
		return m.OldAddr
	}
	return ""
}

func (m *ReplaceNodeInNamespaceReq) GetNewAddr() string {
	if m != nil {
		return m.NewAddr
	}
	return ""
}

func (m *ReplaceNodeInNamespaceReq) GetNewAdminAddr() string {
	if m != nil {
		return m.NewAdminAddr
	}
	return ""
}

type ReplaceNodeInNamespaceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceNodeInNamespaceRsp) Reset()         { *m = ReplaceNodeInNamespaceRsp{} }
func (m *ReplaceNodeInNamespaceRsp) String() string { return proto.CompactTextString(m) }
func (*ReplaceNodeInNamespaceRsp) ProtoMessage()    {}
func (*ReplaceNodeInNamespaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{13}
}
func (m *ReplaceNodeInNamespaceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceNodeInNamespaceRsp.Unmarshal(m, b)
}
func (m *ReplaceNodeInNamespaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceNodeInNamespaceRsp.Marshal(b, m, deterministic)
}
func (dst *ReplaceNodeInNamespaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceNodeInNamespaceRsp.Merge(dst, src)
}
func (m *ReplaceNodeInNamespaceRsp) XXX_Size() int {
	return xxx_messageInfo_ReplaceNodeInNamespaceRsp.Size(m)
}
func (m *ReplaceNodeInNamespaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceNodeInNamespaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceNodeInNamespaceRsp proto.InternalMessageInfo

type AutoBalanceReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoBalanceReq) Reset()         { *m = AutoBalanceReq{} }
func (m *AutoBalanceReq) String() string { return proto.CompactTextString(m) }
func (*AutoBalanceReq) ProtoMessage()    {}
func (*AutoBalanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{14}
}
func (m *AutoBalanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoBalanceReq.Unmarshal(m, b)
}
func (m *AutoBalanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoBalanceReq.Marshal(b, m, deterministic)
}
func (dst *AutoBalanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoBalanceReq.Merge(dst, src)
}
func (m *AutoBalanceReq) XXX_Size() int {
	return xxx_messageInfo_AutoBalanceReq.Size(m)
}
func (m *AutoBalanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoBalanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_AutoBalanceReq proto.InternalMessageInfo

func (m *AutoBalanceReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type AutoBalanceRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoBalanceRsp) Reset()         { *m = AutoBalanceRsp{} }
func (m *AutoBalanceRsp) String() string { return proto.CompactTextString(m) }
func (*AutoBalanceRsp) ProtoMessage()    {}
func (*AutoBalanceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{15}
}
func (m *AutoBalanceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoBalanceRsp.Unmarshal(m, b)
}
func (m *AutoBalanceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoBalanceRsp.Marshal(b, m, deterministic)
}
func (dst *AutoBalanceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoBalanceRsp.Merge(dst, src)
}
func (m *AutoBalanceRsp) XXX_Size() int {
	return xxx_messageInfo_AutoBalanceRsp.Size(m)
}
func (m *AutoBalanceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoBalanceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AutoBalanceRsp proto.InternalMessageInfo

type MigrateShardReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ShardID              uint32   `protobuf:"varint,2,opt,name=shardID,proto3" json:"shardID,omitempty"`
	ReplicaID            uint32   `protobuf:"varint,3,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	FromNode             string   `protobuf:"bytes,4,opt,name=fromNode,proto3" json:"fromNode,omitempty"`
	ToNode               string   `protobuf:"bytes,5,opt,name=toNode,proto3" json:"toNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateShardReq) Reset()         { *m = MigrateShardReq{} }
func (m *MigrateShardReq) String() string { return proto.CompactTextString(m) }
func (*MigrateShardReq) ProtoMessage()    {}
func (*MigrateShardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{16}
}
func (m *MigrateShardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateShardReq.Unmarshal(m, b)
}
func (m *MigrateShardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateShardReq.Marshal(b, m, deterministic)
}
func (dst *MigrateShardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateShardReq.Merge(dst, src)
}
func (m *MigrateShardReq) XXX_Size() int {
	return xxx_messageInfo_MigrateShardReq.Size(m)
}
func (m *MigrateShardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateShardReq.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateShardReq proto.InternalMessageInfo

func (m *MigrateShardReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *MigrateShardReq) GetShardID() uint32 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *MigrateShardReq) GetReplicaID() uint32 {
	if m != nil {
		return m.ReplicaID
	}
	return 0
}

func (m *MigrateShardReq) GetFromNode() string {
	if m != nil {
		return m.FromNode
	}
	return ""
}

func (m *MigrateShardReq) GetToNode() string {
	if m != nil {
		return m.ToNode
	}
	return ""
}

type MigrateShardRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateShardRsp) Reset()         { *m = MigrateShardRsp{} }
func (m *MigrateShardRsp) String() string { return proto.CompactTextString(m) }
func (*MigrateShardRsp) ProtoMessage()    {}
func (*MigrateShardRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{17}
}
func (m *MigrateShardRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateShardRsp.Unmarshal(m, b)
}
func (m *MigrateShardRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateShardRsp.Marshal(b, m, deterministic)
}
func (dst *MigrateShardRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateShardRsp.Merge(dst, src)
}
func (m *MigrateShardRsp) XXX_Size() int {
	return xxx_messageInfo_MigrateShardRsp.Size(m)
}
func (m *MigrateShardRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateShardRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateShardRsp proto.InternalMessageInfo

type InfoReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{18}
}
func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (dst *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(dst, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

func (m *InfoReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type InfoRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRsp) Reset()         { *m = InfoRsp{} }
func (m *InfoRsp) String() string { return proto.CompactTextString(m) }
func (*InfoRsp) ProtoMessage()    {}
func (*InfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{19}
}
func (m *InfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRsp.Unmarshal(m, b)
}
func (m *InfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRsp.Marshal(b, m, deterministic)
}
func (dst *InfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRsp.Merge(dst, src)
}
func (m *InfoRsp) XXX_Size() int {
	return xxx_messageInfo_InfoRsp.Size(m)
}
func (m *InfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRsp proto.InternalMessageInfo

type CommitReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReq) Reset()         { *m = CommitReq{} }
func (m *CommitReq) String() string { return proto.CompactTextString(m) }
func (*CommitReq) ProtoMessage()    {}
func (*CommitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{20}
}
func (m *CommitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReq.Unmarshal(m, b)
}
func (m *CommitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReq.Marshal(b, m, deterministic)
}
func (dst *CommitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReq.Merge(dst, src)
}
func (m *CommitReq) XXX_Size() int {
	return xxx_messageInfo_CommitReq.Size(m)
}
func (m *CommitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReq.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReq proto.InternalMessageInfo

func (m *CommitReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type CommitRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRsp) Reset()         { *m = CommitRsp{} }
func (m *CommitRsp) String() string { return proto.CompactTextString(m) }
func (*CommitRsp) ProtoMessage()    {}
func (*CommitRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_metad_478b6eed5659d6ba, []int{21}
}
func (m *CommitRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRsp.Unmarshal(m, b)
}
func (m *CommitRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRsp.Marshal(b, m, deterministic)
}
func (dst *CommitRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRsp.Merge(dst, src)
}
func (m *CommitRsp) XXX_Size() int {
	return xxx_messageInfo_CommitRsp.Size(m)
}
func (m *CommitRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRsp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterClientReq)(nil), "metad.RegisterClientReq")
	proto.RegisterType((*RegisterClientRsp)(nil), "metad.RegisterClientRsp")
	proto.RegisterType((*RegisterClientRsp_ShardGroup)(nil), "metad.RegisterClientRsp.ShardGroup")
	proto.RegisterType((*RegisterClientRsp_Shard)(nil), "metad.RegisterClientRsp.Shard")
	proto.RegisterType((*RegisterNodeReq)(nil), "metad.RegisterNodeReq")
	proto.RegisterType((*RegisterNodeReq_Shard)(nil), "metad.RegisterNodeReq.Shard")
	proto.RegisterType((*RegisterNodeRsp)(nil), "metad.RegisterNodeRsp")
	proto.RegisterType((*CreateNamespaceReq)(nil), "metad.CreateNamespaceReq")
	proto.RegisterType((*CreateNamespaceRsp)(nil), "metad.CreateNamespaceRsp")
	proto.RegisterType((*DropNamespaceReq)(nil), "metad.DropNamespaceReq")
	proto.RegisterType((*DropNamespaceRsp)(nil), "metad.DropNamespaceRsp")
	proto.RegisterType((*AddNodeToNamespaceReq)(nil), "metad.AddNodeToNamespaceReq")
	proto.RegisterType((*AddNodeToNamespaceRsp)(nil), "metad.AddNodeToNamespaceRsp")
	proto.RegisterType((*RemoveNodeFromNamespaceReq)(nil), "metad.RemoveNodeFromNamespaceReq")
	proto.RegisterType((*RemoveNodeFromNamespaceRsp)(nil), "metad.RemoveNodeFromNamespaceRsp")
	proto.RegisterType((*ReplaceNodeInNamespaceReq)(nil), "metad.ReplaceNodeInNamespaceReq")
	proto.RegisterType((*ReplaceNodeInNamespaceRsp)(nil), "metad.ReplaceNodeInNamespaceRsp")
	proto.RegisterType((*AutoBalanceReq)(nil), "metad.AutoBalanceReq")
	proto.RegisterType((*AutoBalanceRsp)(nil), "metad.AutoBalanceRsp")
	proto.RegisterType((*MigrateShardReq)(nil), "metad.MigrateShardReq")
	proto.RegisterType((*MigrateShardRsp)(nil), "metad.MigrateShardRsp")
	proto.RegisterType((*InfoReq)(nil), "metad.InfoReq")
	proto.RegisterType((*InfoRsp)(nil), "metad.InfoRsp")
	proto.RegisterType((*CommitReq)(nil), "metad.CommitReq")
	proto.RegisterType((*CommitRsp)(nil), "metad.CommitRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ tr.Server
var _ tr.ClientConn
var _ tropt.CallOption

type MetadGrpcClient interface {
	RegisterClient(ctx context.Context, opts ...tropt.CallOption) (Metad_RegisterClientClient, error)
	RegisterNode(ctx context.Context, opts ...tropt.CallOption) (Metad_RegisterNodeClient, error)
	CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...tropt.CallOption) (*CreateNamespaceRsp, error)
	DropNamespace(ctx context.Context, in *DropNamespaceReq, opts ...tropt.CallOption) (*DropNamespaceRsp, error)
	AddNodeToNamespace(ctx context.Context, in *AddNodeToNamespaceReq, opts ...tropt.CallOption) (*AddNodeToNamespaceRsp, error)
	RemoveNodeFromNamespace(ctx context.Context, in *RemoveNodeFromNamespaceReq, opts ...tropt.CallOption) (*RemoveNodeFromNamespaceRsp, error)
	ReplaceNodeInNamespace(ctx context.Context, in *ReplaceNodeInNamespaceReq, opts ...tropt.CallOption) (*ReplaceNodeInNamespaceRsp, error)
	AutoBalance(ctx context.Context, in *AutoBalanceReq, opts ...tropt.CallOption) (*AutoBalanceRsp, error)
	MigrateShard(ctx context.Context, in *MigrateShardReq, opts ...tropt.CallOption) (*MigrateShardRsp, error)
	Info(ctx context.Context, in *InfoReq, opts ...tropt.CallOption) (*InfoRsp, error)
	Commit(ctx context.Context, in *CommitReq, opts ...tropt.CallOption) (*CommitRsp, error)
}

type metadGrpcClient struct {
	cc tr.ClientConn
}

func NewMetadGrpcClient(cc tr.ClientConn) MetadGrpcClient {
	return &metadGrpcClient{cc}
}

func (c *metadGrpcClient) RegisterClient(ctx context.Context, opts ...tropt.CallOption) (Metad_RegisterClientClient, error) {
	stream, err := c.cc.NewStream(ctx, MetadGrpcServiceDesc, 0, "/metad.Metad/RegisterClient", opts...)
	if err != nil {
		return nil, err
	}
	x := &metadRegisterClientClient{stream}
	return x, nil
}

func (c *metadGrpcClient) RegisterNode(ctx context.Context, opts ...tropt.CallOption) (Metad_RegisterNodeClient, error) {
	stream, err := c.cc.NewStream(ctx, MetadGrpcServiceDesc, 1, "/metad.Metad/RegisterNode", opts...)
	if err != nil {
		return nil, err
	}
	x := &metadRegisterNodeClient{stream}
	return x, nil
}

func (c *metadGrpcClient) CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...tropt.CallOption) (*CreateNamespaceRsp, error) {
	out := new(CreateNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) DropNamespace(ctx context.Context, in *DropNamespaceReq, opts ...tropt.CallOption) (*DropNamespaceRsp, error) {
	out := new(DropNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/DropNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) AddNodeToNamespace(ctx context.Context, in *AddNodeToNamespaceReq, opts ...tropt.CallOption) (*AddNodeToNamespaceRsp, error) {
	out := new(AddNodeToNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/AddNodeToNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) RemoveNodeFromNamespace(ctx context.Context, in *RemoveNodeFromNamespaceReq, opts ...tropt.CallOption) (*RemoveNodeFromNamespaceRsp, error) {
	out := new(RemoveNodeFromNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/RemoveNodeFromNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) ReplaceNodeInNamespace(ctx context.Context, in *ReplaceNodeInNamespaceReq, opts ...tropt.CallOption) (*ReplaceNodeInNamespaceRsp, error) {
	out := new(ReplaceNodeInNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/ReplaceNodeInNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) AutoBalance(ctx context.Context, in *AutoBalanceReq, opts ...tropt.CallOption) (*AutoBalanceRsp, error) {
	out := new(AutoBalanceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/AutoBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) MigrateShard(ctx context.Context, in *MigrateShardReq, opts ...tropt.CallOption) (*MigrateShardRsp, error) {
	out := new(MigrateShardRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/MigrateShard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) Info(ctx context.Context, in *InfoReq, opts ...tropt.CallOption) (*InfoRsp, error) {
	out := new(InfoRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadGrpcClient) Commit(ctx context.Context, in *CommitReq, opts ...tropt.CallOption) (*CommitRsp, error) {
	out := new(CommitRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type metadGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *metadGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var MetadGrpcServiceDesc = &metadGrpcServiceDesc{&_Metad_serviceDesc}

// Reference imports to suppress errors if they are not otherwise used.
var _ context1.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// MetadClient is the client API for Metad service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadClient interface {
	RegisterClient(ctx context1.Context, opts ...grpc1.CallOption) (Metad_RegisterClientClient, error)
	RegisterNode(ctx context1.Context, opts ...grpc1.CallOption) (Metad_RegisterNodeClient, error)
	CreateNamespace(ctx context1.Context, in *CreateNamespaceReq, opts ...grpc1.CallOption) (*CreateNamespaceRsp, error)
	DropNamespace(ctx context1.Context, in *DropNamespaceReq, opts ...grpc1.CallOption) (*DropNamespaceRsp, error)
	AddNodeToNamespace(ctx context1.Context, in *AddNodeToNamespaceReq, opts ...grpc1.CallOption) (*AddNodeToNamespaceRsp, error)
	RemoveNodeFromNamespace(ctx context1.Context, in *RemoveNodeFromNamespaceReq, opts ...grpc1.CallOption) (*RemoveNodeFromNamespaceRsp, error)
	ReplaceNodeInNamespace(ctx context1.Context, in *ReplaceNodeInNamespaceReq, opts ...grpc1.CallOption) (*ReplaceNodeInNamespaceRsp, error)
	AutoBalance(ctx context1.Context, in *AutoBalanceReq, opts ...grpc1.CallOption) (*AutoBalanceRsp, error)
	MigrateShard(ctx context1.Context, in *MigrateShardReq, opts ...grpc1.CallOption) (*MigrateShardRsp, error)
	Info(ctx context1.Context, in *InfoReq, opts ...grpc1.CallOption) (*InfoRsp, error)
	Commit(ctx context1.Context, in *CommitReq, opts ...grpc1.CallOption) (*CommitRsp, error)
}

type metadClient struct {
	cc *grpc1.ClientConn
}

func NewMetadClient(cc *grpc1.ClientConn) MetadClient {
	return &metadClient{cc}
}

func (c *metadClient) RegisterClient(ctx context1.Context, opts ...grpc1.CallOption) (Metad_RegisterClientClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Metad_serviceDesc.Streams[0], "/metad.Metad/RegisterClient", opts...)
	if err != nil {
		return nil, err
	}
	x := &metadRegisterClientClient{stream}
	return x, nil
}

type Metad_RegisterClientClient interface {
	Send(*RegisterClientReq) error
	Recv() (*RegisterClientRsp, error)
	grpc1.ClientStream
}

type metadRegisterClientClient struct {
	grpc1.ClientStream
}

func (x *metadRegisterClientClient) Send(m *RegisterClientReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metadRegisterClientClient) Recv() (*RegisterClientRsp, error) {
	m := new(RegisterClientRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metadClient) RegisterNode(ctx context1.Context, opts ...grpc1.CallOption) (Metad_RegisterNodeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Metad_serviceDesc.Streams[1], "/metad.Metad/RegisterNode", opts...)
	if err != nil {
		return nil, err
	}
	x := &metadRegisterNodeClient{stream}
	return x, nil
}

type Metad_RegisterNodeClient interface {
	Send(*RegisterNodeReq) error
	Recv() (*RegisterNodeRsp, error)
	grpc1.ClientStream
}

type metadRegisterNodeClient struct {
	grpc1.ClientStream
}

func (x *metadRegisterNodeClient) Send(m *RegisterNodeReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metadRegisterNodeClient) Recv() (*RegisterNodeRsp, error) {
	m := new(RegisterNodeRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metadClient) CreateNamespace(ctx context1.Context, in *CreateNamespaceReq, opts ...grpc1.CallOption) (*CreateNamespaceRsp, error) {
	out := new(CreateNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) DropNamespace(ctx context1.Context, in *DropNamespaceReq, opts ...grpc1.CallOption) (*DropNamespaceRsp, error) {
	out := new(DropNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/DropNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) AddNodeToNamespace(ctx context1.Context, in *AddNodeToNamespaceReq, opts ...grpc1.CallOption) (*AddNodeToNamespaceRsp, error) {
	out := new(AddNodeToNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/AddNodeToNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) RemoveNodeFromNamespace(ctx context1.Context, in *RemoveNodeFromNamespaceReq, opts ...grpc1.CallOption) (*RemoveNodeFromNamespaceRsp, error) {
	out := new(RemoveNodeFromNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/RemoveNodeFromNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) ReplaceNodeInNamespace(ctx context1.Context, in *ReplaceNodeInNamespaceReq, opts ...grpc1.CallOption) (*ReplaceNodeInNamespaceRsp, error) {
	out := new(ReplaceNodeInNamespaceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/ReplaceNodeInNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) AutoBalance(ctx context1.Context, in *AutoBalanceReq, opts ...grpc1.CallOption) (*AutoBalanceRsp, error) {
	out := new(AutoBalanceRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/AutoBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) MigrateShard(ctx context1.Context, in *MigrateShardReq, opts ...grpc1.CallOption) (*MigrateShardRsp, error) {
	out := new(MigrateShardRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/MigrateShard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) Info(ctx context1.Context, in *InfoReq, opts ...grpc1.CallOption) (*InfoRsp, error) {
	out := new(InfoRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadClient) Commit(ctx context1.Context, in *CommitReq, opts ...grpc1.CallOption) (*CommitRsp, error) {
	out := new(CommitRsp)
	err := c.cc.Invoke(ctx, "/metad.Metad/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadServer is the server API for Metad service.
type MetadServer interface {
	RegisterClient(Metad_RegisterClientServer) error
	RegisterNode(Metad_RegisterNodeServer) error
	CreateNamespace(context1.Context, *CreateNamespaceReq) (*CreateNamespaceRsp, error)
	DropNamespace(context1.Context, *DropNamespaceReq) (*DropNamespaceRsp, error)
	AddNodeToNamespace(context1.Context, *AddNodeToNamespaceReq) (*AddNodeToNamespaceRsp, error)
	RemoveNodeFromNamespace(context1.Context, *RemoveNodeFromNamespaceReq) (*RemoveNodeFromNamespaceRsp, error)
	ReplaceNodeInNamespace(context1.Context, *ReplaceNodeInNamespaceReq) (*ReplaceNodeInNamespaceRsp, error)
	AutoBalance(context1.Context, *AutoBalanceReq) (*AutoBalanceRsp, error)
	MigrateShard(context1.Context, *MigrateShardReq) (*MigrateShardRsp, error)
	Info(context1.Context, *InfoReq) (*InfoRsp, error)
	Commit(context1.Context, *CommitReq) (*CommitRsp, error)
}

func RegisterMetadServer(s *grpc1.Server, srv MetadServer) {
	s.RegisterService(&_Metad_serviceDesc, srv)
}

func _Metad_RegisterClient_Handler(srv interface{}, stream grpc1.ServerStream) error {
	return srv.(MetadServer).RegisterClient(&metadRegisterClientServer{stream})
}

type Metad_RegisterClientServer interface {
	Send(*RegisterClientRsp) error
	Recv() (*RegisterClientReq, error)
	grpc1.ServerStream
}

type metadRegisterClientServer struct {
	grpc1.ServerStream
}

func (x *metadRegisterClientServer) Send(m *RegisterClientRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metadRegisterClientServer) Recv() (*RegisterClientReq, error) {
	m := new(RegisterClientReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Metad_RegisterNode_Handler(srv interface{}, stream grpc1.ServerStream) error {
	return srv.(MetadServer).RegisterNode(&metadRegisterNodeServer{stream})
}

type Metad_RegisterNodeServer interface {
	Send(*RegisterNodeRsp) error
	Recv() (*RegisterNodeReq, error)
	grpc1.ServerStream
}

type metadRegisterNodeServer struct {
	grpc1.ServerStream
}

func (x *metadRegisterNodeServer) Send(m *RegisterNodeRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metadRegisterNodeServer) Recv() (*RegisterNodeReq, error) {
	m := new(RegisterNodeReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Metad_CreateNamespace_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).CreateNamespace(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/CreateNamespace",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).CreateNamespace(ctx, req.(*CreateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_DropNamespace_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).DropNamespace(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/DropNamespace",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).DropNamespace(ctx, req.(*DropNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_AddNodeToNamespace_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeToNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).AddNodeToNamespace(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/AddNodeToNamespace",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).AddNodeToNamespace(ctx, req.(*AddNodeToNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_RemoveNodeFromNamespace_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeFromNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).RemoveNodeFromNamespace(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/RemoveNodeFromNamespace",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).RemoveNodeFromNamespace(ctx, req.(*RemoveNodeFromNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_ReplaceNodeInNamespace_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceNodeInNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).ReplaceNodeInNamespace(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/ReplaceNodeInNamespace",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).ReplaceNodeInNamespace(ctx, req.(*ReplaceNodeInNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_AutoBalance_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutoBalanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).AutoBalance(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/AutoBalance",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).AutoBalance(ctx, req.(*AutoBalanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_MigrateShard_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateShardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).MigrateShard(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/MigrateShard",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).MigrateShard(ctx, req.(*MigrateShardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_Info_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).Info(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/Info",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).Info(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Metad_Commit_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadServer).Commit(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metad.Metad/Commit",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(MetadServer).Commit(ctx, req.(*CommitReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Metad_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "metad.Metad",
	HandlerType: (*MetadServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "CreateNamespace",
			Handler:    _Metad_CreateNamespace_Handler,
		},
		{
			MethodName: "DropNamespace",
			Handler:    _Metad_DropNamespace_Handler,
		},
		{
			MethodName: "AddNodeToNamespace",
			Handler:    _Metad_AddNodeToNamespace_Handler,
		},
		{
			MethodName: "RemoveNodeFromNamespace",
			Handler:    _Metad_RemoveNodeFromNamespace_Handler,
		},
		{
			MethodName: "ReplaceNodeInNamespace",
			Handler:    _Metad_ReplaceNodeInNamespace_Handler,
		},
		{
			MethodName: "AutoBalance",
			Handler:    _Metad_AutoBalance_Handler,
		},
		{
			MethodName: "MigrateShard",
			Handler:    _Metad_MigrateShard_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Metad_Info_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _Metad_Commit_Handler,
		},
	},
	Streams: []grpc1.StreamDesc{
		{
			StreamName:    "RegisterClient",
			Handler:       _Metad_RegisterClient_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "RegisterNode",
			Handler:       _Metad_RegisterNode_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "metad.proto",
}

func init() { proto.RegisterFile("metad.proto", fileDescriptor_metad_478b6eed5659d6ba) }

var fileDescriptor_metad_478b6eed5659d6ba = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xda, 0x48,
	0x14, 0x5e, 0x93, 0x40, 0xc2, 0x21, 0x90, 0xe4, 0x68, 0x93, 0x90, 0xd9, 0x68, 0xc5, 0x4e, 0x56,
	0x5a, 0xf6, 0x06, 0x65, 0xd9, 0xbb, 0x56, 0x95, 0x9a, 0x82, 0xd2, 0x52, 0x29, 0x5c, 0x38, 0xbd,
	0xae, 0x34, 0xc5, 0x13, 0x6a, 0x09, 0x7b, 0x26, 0x1e, 0xa7, 0x7d, 0x8e, 0x5e, 0xe7, 0x61, 0xfa,
	0x02, 0x7d, 0xa8, 0x6a, 0x86, 0xb1, 0xc1, 0xc6, 0x06, 0xa2, 0xde, 0xf9, 0x9c, 0xf3, 0xcd, 0xf9,
	0x99, 0x39, 0xdf, 0x27, 0x43, 0x23, 0xe0, 0x31, 0xf3, 0x7a, 0x32, 0x12, 0xb1, 0xc0, 0xaa, 0x31,
	0xe8, 0x7f, 0x70, 0xec, 0xf2, 0xa9, 0xaf, 0x62, 0x1e, 0x0d, 0x66, 0x3e, 0x0f, 0x63, 0x97, 0x3f,
	0xe0, 0x05, 0xd4, 0x43, 0x16, 0x70, 0x25, 0xd9, 0x84, 0xb7, 0x9d, 0x8e, 0xd3, 0xad, 0xbb, 0x0b,
	0x07, 0xfd, 0xee, 0xac, 0x9c, 0x51, 0x12, 0x5f, 0x42, 0x6d, 0x1a, 0x89, 0x47, 0xa9, 0xda, 0x4e,
	0x67, 0xa7, 0xdb, 0xe8, 0x5f, 0xf6, 0xe6, 0xd5, 0x56, 0x90, 0xbd, 0xbb, 0xcf, 0x2c, 0xf2, 0xde,
	0x6a, 0xac, 0x6b, 0x8f, 0x90, 0x77, 0x00, 0x0b, 0x2f, 0xbe, 0x80, 0xfd, 0x88, 0xcb, 0x99, 0x3f,
	0x61, 0x49, 0xb2, 0x3f, 0xd7, 0x27, 0x73, 0x53, 0x3c, 0xb9, 0x84, 0xaa, 0x71, 0x21, 0x81, 0xfd,
	0x50, 0x78, 0xfc, 0xda, 0xf3, 0x22, 0x3b, 0x42, 0x6a, 0xd3, 0x1f, 0x0e, 0x1c, 0x26, 0xa9, 0xc6,
	0xc2, 0xe3, 0x7a, 0x66, 0x84, 0x5d, 0xb6, 0xc0, 0x9a, 0x6f, 0x7d, 0x0f, 0xcc, 0x0b, 0xfc, 0xd0,
	0x24, 0xa9, 0xcc, 0xef, 0x21, 0x75, 0x60, 0x1f, 0xaa, 0x4a, 0x97, 0x6a, 0xef, 0x74, 0x9c, 0x6e,
	0xa3, 0x7f, 0x91, 0xeb, 0xd1, 0x26, 0xb6, 0x1d, 0xce, 0xa1, 0xe4, 0x2e, 0x69, 0x6f, 0xed, 0x15,
	0x63, 0x0b, 0x2a, 0xbe, 0x67, 0x2a, 0x36, 0xdd, 0x8a, 0x6f, 0xd0, 0x76, 0xc2, 0xd1, 0xd0, 0x94,
	0x6b, 0xba, 0x0b, 0x07, 0x3d, 0xce, 0x4d, 0xa3, 0x24, 0x8d, 0x01, 0x07, 0x11, 0x67, 0x31, 0x1f,
	0x27, 0x39, 0x37, 0xbe, 0xab, 0xbe, 0x31, 0xd3, 0xe4, 0xf8, 0x31, 0xb0, 0xa5, 0x53, 0x1b, 0xff,
	0x86, 0xa6, 0xad, 0x77, 0xc3, 0x26, 0xb1, 0x88, 0x6c, 0x13, 0x59, 0x27, 0xfd, 0x7d, 0xb5, 0xaa,
	0x92, 0xf4, 0x0a, 0x8e, 0x86, 0x91, 0x90, 0xdb, 0x77, 0x42, 0x31, 0x7f, 0x42, 0x49, 0x3a, 0x85,
	0x93, 0x6b, 0xcf, 0xd3, 0xf3, 0x7d, 0x10, 0xcf, 0x18, 0x2a, 0x79, 0xd6, 0x4a, 0xd9, 0xb3, 0xee,
	0xe4, 0x9e, 0x95, 0x9e, 0x15, 0x16, 0x52, 0x92, 0x8e, 0x81, 0xb8, 0x3c, 0x10, 0x5f, 0xb8, 0x8e,
	0xdd, 0x44, 0x22, 0xf8, 0xb5, 0x36, 0xe8, 0x45, 0x79, 0x3e, 0x25, 0xe9, 0x37, 0x07, 0xce, 0x5d,
	0x2e, 0x67, 0x6c, 0x62, 0xe2, 0xa3, 0xf0, 0x19, 0xd5, 0xda, 0xb0, 0x27, 0x66, 0xde, 0xd2, 0xd6,
	0x26, 0xa6, 0x8e, 0x84, 0xfc, 0xeb, 0xd2, 0xe0, 0x89, 0x89, 0x14, 0x0e, 0xcc, 0x67, 0x72, 0x2f,
	0xbb, 0x26, 0x9c, 0xf1, 0xd1, 0x3f, 0x4a, 0x5b, 0x52, 0x92, 0xf6, 0xa0, 0x75, 0xfd, 0x18, 0x8b,
	0x37, 0x6c, 0xc6, 0xc2, 0x6d, 0x1e, 0xf9, 0x28, 0x8b, 0x57, 0x92, 0x3e, 0x39, 0x70, 0x78, 0xeb,
	0x4f, 0x23, 0x16, 0xf3, 0x39, 0x69, 0xb6, 0x19, 0xd4, 0xac, 0xe8, 0x68, 0x68, 0x37, 0x36, 0x31,
	0xd7, 0x33, 0x46, 0xaf, 0xfa, 0xbd, 0xbe, 0x70, 0xe1, 0x71, 0x3b, 0x68, 0x6a, 0xe3, 0x29, 0xd4,
	0x62, 0x61, 0x22, 0x55, 0x13, 0xb1, 0x96, 0x66, 0x59, 0xa6, 0x39, 0x25, 0xe9, 0x3f, 0xb0, 0x37,
	0x0a, 0xef, 0xc5, 0xe6, 0x59, 0xeb, 0x16, 0xa8, 0x24, 0xfd, 0x17, 0xea, 0x03, 0x11, 0x04, 0xfe,
	0x16, 0x42, 0xdb, 0x48, 0xa1, 0x4a, 0xf6, 0x9f, 0x6a, 0x50, 0xbd, 0xd5, 0x02, 0x83, 0xef, 0xa1,
	0x95, 0xd5, 0x41, 0x6c, 0x17, 0xcb, 0x23, 0x7f, 0x20, 0xed, 0x32, 0xe1, 0xa4, 0xbf, 0x75, 0x9d,
	0x2b, 0x07, 0x87, 0x70, 0xb0, 0x2c, 0x1d, 0x78, 0x5a, 0x2c, 0x62, 0xa4, 0xd0, 0x9f, 0x66, 0x19,
	0xc1, 0x61, 0x8e, 0xf7, 0x78, 0x6e, 0x0f, 0xac, 0xaa, 0x10, 0x29, 0x0b, 0xe9, 0x74, 0x38, 0x80,
	0x66, 0x86, 0xfa, 0x78, 0x66, 0xd1, 0x79, 0x09, 0x21, 0xc5, 0x01, 0x93, 0xc4, 0x05, 0x5c, 0xa5,
	0x30, 0x26, 0x02, 0x5d, 0x28, 0x23, 0x64, 0x4d, 0xd4, 0xe4, 0x64, 0x70, 0x56, 0xc2, 0x56, 0xfc,
	0x2b, 0xbd, 0x9c, 0x32, 0x75, 0x20, 0x9b, 0x20, 0xa6, 0xc4, 0x47, 0x38, 0x2d, 0xa6, 0x17, 0x76,
	0xd2, 0xe3, 0x25, 0x82, 0x40, 0x36, 0x20, 0x4c, 0xfe, 0x57, 0xd0, 0x58, 0x62, 0x1c, 0x9e, 0x24,
	0x13, 0x67, 0x58, 0x4b, 0x8a, 0xdc, 0xe6, 0xf8, 0x6b, 0x38, 0x58, 0x26, 0x40, 0xba, 0x2b, 0x39,
	0xca, 0x92, 0x42, 0xbf, 0xc9, 0xd0, 0x85, 0x5d, 0x4d, 0x03, 0x6c, 0x59, 0x84, 0x25, 0x0f, 0xc9,
	0xd8, 0x06, 0xd9, 0x83, 0xda, 0x7c, 0xf5, 0xf1, 0x28, 0xd9, 0x96, 0x84, 0x34, 0x24, 0xe7, 0xd1,
	0xf8, 0x4f, 0x35, 0xf3, 0x53, 0xf3, 0xff, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0xf9, 0x00,
	0x00, 0xe3, 0x08, 0x00, 0x00,
}
