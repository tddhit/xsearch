// Code generated by protoc-gen-box. DO NOT EDIT.
// source: searchd.proto

package searchdpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import xsearchpb "github.com/tddhit/xsearch/xsearchpb"

import (
	tr "github.com/tddhit/box/transport"
	tropt "github.com/tddhit/box/transport/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	context1 "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddDocRequest struct {
	Doc                  *xsearchpb.Document `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AddDocRequest) Reset()         { *m = AddDocRequest{} }
func (m *AddDocRequest) String() string { return proto.CompactTextString(m) }
func (*AddDocRequest) ProtoMessage()    {}
func (*AddDocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{0}
}
func (m *AddDocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDocRequest.Unmarshal(m, b)
}
func (m *AddDocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDocRequest.Marshal(b, m, deterministic)
}
func (dst *AddDocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDocRequest.Merge(dst, src)
}
func (m *AddDocRequest) XXX_Size() int {
	return xxx_messageInfo_AddDocRequest.Size(m)
}
func (m *AddDocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDocRequest proto.InternalMessageInfo

func (m *AddDocRequest) GetDoc() *xsearchpb.Document {
	if m != nil {
		return m.Doc
	}
	return nil
}

type AddDocReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDocReply) Reset()         { *m = AddDocReply{} }
func (m *AddDocReply) String() string { return proto.CompactTextString(m) }
func (*AddDocReply) ProtoMessage()    {}
func (*AddDocReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{1}
}
func (m *AddDocReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDocReply.Unmarshal(m, b)
}
func (m *AddDocReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDocReply.Marshal(b, m, deterministic)
}
func (dst *AddDocReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDocReply.Merge(dst, src)
}
func (m *AddDocReply) XXX_Size() int {
	return xxx_messageInfo_AddDocReply.Size(m)
}
func (m *AddDocReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDocReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddDocReply proto.InternalMessageInfo

type RemoveDocRequest struct {
	Doc                  *xsearchpb.Document `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RemoveDocRequest) Reset()         { *m = RemoveDocRequest{} }
func (m *RemoveDocRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveDocRequest) ProtoMessage()    {}
func (*RemoveDocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{2}
}
func (m *RemoveDocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocRequest.Unmarshal(m, b)
}
func (m *RemoveDocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveDocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocRequest.Merge(dst, src)
}
func (m *RemoveDocRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveDocRequest.Size(m)
}
func (m *RemoveDocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocRequest proto.InternalMessageInfo

func (m *RemoveDocRequest) GetDoc() *xsearchpb.Document {
	if m != nil {
		return m.Doc
	}
	return nil
}

type RemoveDocReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDocReply) Reset()         { *m = RemoveDocReply{} }
func (m *RemoveDocReply) String() string { return proto.CompactTextString(m) }
func (*RemoveDocReply) ProtoMessage()    {}
func (*RemoveDocReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{3}
}
func (m *RemoveDocReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocReply.Unmarshal(m, b)
}
func (m *RemoveDocReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocReply.Marshal(b, m, deterministic)
}
func (dst *RemoveDocReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocReply.Merge(dst, src)
}
func (m *RemoveDocReply) XXX_Size() int {
	return xxx_messageInfo_RemoveDocReply.Size(m)
}
func (m *RemoveDocReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocReply proto.InternalMessageInfo

type SearchRequest struct {
	Query                *xsearchpb.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Start                uint64           `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Count                int32            `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{4}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (dst *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(dst, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() *xsearchpb.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchRequest) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchReply struct {
	Docs                 []*xsearchpb.Document `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_searchd_4f15c63955c4eca9, []int{5}
}
func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (dst *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(dst, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetDocs() []*xsearchpb.Document {
	if m != nil {
		return m.Docs
	}
	return nil
}

func init() {
	proto.RegisterType((*AddDocRequest)(nil), "searchdpb.AddDocRequest")
	proto.RegisterType((*AddDocReply)(nil), "searchdpb.AddDocReply")
	proto.RegisterType((*RemoveDocRequest)(nil), "searchdpb.RemoveDocRequest")
	proto.RegisterType((*RemoveDocReply)(nil), "searchdpb.RemoveDocReply")
	proto.RegisterType((*SearchRequest)(nil), "searchdpb.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "searchdpb.SearchReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ tr.Server
var _ tr.ClientConn
var _ tropt.CallOption

type SearchdGrpcClient interface {
	AddDoc(ctx context.Context, in *AddDocRequest, opts ...tropt.CallOption) (*AddDocReply, error)
	RemoveDoc(ctx context.Context, in *RemoveDocRequest, opts ...tropt.CallOption) (*RemoveDocReply, error)
	Search(ctx context.Context, in *SearchRequest, opts ...tropt.CallOption) (*SearchReply, error)
}

type searchdGrpcClient struct {
	cc tr.ClientConn
}

func NewSearchdGrpcClient(cc tr.ClientConn) SearchdGrpcClient {
	return &searchdGrpcClient{cc}
}

func (c *searchdGrpcClient) AddDoc(ctx context.Context, in *AddDocRequest, opts ...tropt.CallOption) (*AddDocReply, error) {
	out := new(AddDocReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/AddDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchdGrpcClient) RemoveDoc(ctx context.Context, in *RemoveDocRequest, opts ...tropt.CallOption) (*RemoveDocReply, error) {
	out := new(RemoveDocReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchdGrpcClient) Search(ctx context.Context, in *SearchRequest, opts ...tropt.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type searchdGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *searchdGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var SearchdGrpcServiceDesc = &searchdGrpcServiceDesc{&_Searchd_serviceDesc}

// Reference imports to suppress errors if they are not otherwise used.
var _ context1.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// SearchdClient is the client API for Searchd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchdClient interface {
	AddDoc(ctx context1.Context, in *AddDocRequest, opts ...grpc1.CallOption) (*AddDocReply, error)
	RemoveDoc(ctx context1.Context, in *RemoveDocRequest, opts ...grpc1.CallOption) (*RemoveDocReply, error)
	Search(ctx context1.Context, in *SearchRequest, opts ...grpc1.CallOption) (*SearchReply, error)
}

type searchdClient struct {
	cc *grpc1.ClientConn
}

func NewSearchdClient(cc *grpc1.ClientConn) SearchdClient {
	return &searchdClient{cc}
}

func (c *searchdClient) AddDoc(ctx context1.Context, in *AddDocRequest, opts ...grpc1.CallOption) (*AddDocReply, error) {
	out := new(AddDocReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/AddDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchdClient) RemoveDoc(ctx context1.Context, in *RemoveDocRequest, opts ...grpc1.CallOption) (*RemoveDocReply, error) {
	out := new(RemoveDocReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchdClient) Search(ctx context1.Context, in *SearchRequest, opts ...grpc1.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := c.cc.Invoke(ctx, "/searchdpb.Searchd/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchdServer is the server API for Searchd service.
type SearchdServer interface {
	AddDoc(context1.Context, *AddDocRequest) (*AddDocReply, error)
	RemoveDoc(context1.Context, *RemoveDocRequest) (*RemoveDocReply, error)
	Search(context1.Context, *SearchRequest) (*SearchReply, error)
}

func RegisterSearchdServer(s *grpc1.Server, srv SearchdServer) {
	s.RegisterService(&_Searchd_serviceDesc, srv)
}

func _Searchd_AddDoc_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchdServer).AddDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/searchdpb.Searchd/AddDoc",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(SearchdServer).AddDoc(ctx, req.(*AddDocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Searchd_RemoveDoc_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchdServer).RemoveDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/searchdpb.Searchd/RemoveDoc",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(SearchdServer).RemoveDoc(ctx, req.(*RemoveDocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Searchd_Search_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchdServer).Search(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/searchdpb.Searchd/Search",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(SearchdServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Searchd_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "searchdpb.Searchd",
	HandlerType: (*SearchdServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddDoc",
			Handler:    _Searchd_AddDoc_Handler,
		},
		{
			MethodName: "RemoveDoc",
			Handler:    _Searchd_RemoveDoc_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Searchd_Search_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "searchd.proto",
}

func init() { proto.RegisterFile("searchd.proto", fileDescriptor_searchd_4f15c63955c4eca9) }

var fileDescriptor_searchd_4f15c63955c4eca9 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4f, 0x83, 0x30,
	0x18, 0x5e, 0x65, 0x60, 0xf6, 0x12, 0x0c, 0xa9, 0xc6, 0x20, 0x1e, 0x24, 0x24, 0x2a, 0xa7, 0x9a,
	0xcc, 0x64, 0x89, 0xc9, 0x2e, 0x9a, 0xf9, 0x03, 0xac, 0x37, 0x6f, 0xa3, 0x6d, 0xe2, 0x61, 0x5b,
	0x3b, 0x28, 0x46, 0xfe, 0xa3, 0x3f, 0xca, 0x94, 0x02, 0x82, 0x99, 0x07, 0x4f, 0xf4, 0xed, 0xf3,
	0xc1, 0xf3, 0x3e, 0x29, 0x04, 0xa5, 0x58, 0x17, 0xec, 0x9d, 0x13, 0x55, 0x48, 0x2d, 0xf1, 0xac,
	0x1d, 0x55, 0x1e, 0x5f, 0x7d, 0xda, 0xf3, 0x5d, 0xfb, 0x55, 0x79, 0x77, 0xb2, 0xdc, 0x74, 0x01,
	0xc1, 0x23, 0xe7, 0x2b, 0xc9, 0xa8, 0xd8, 0x57, 0xa2, 0xd4, 0xf8, 0x1a, 0x1c, 0x2e, 0x59, 0x84,
	0x12, 0x94, 0xf9, 0xf3, 0x53, 0xd2, 0xeb, 0xc8, 0x4a, 0xb2, 0x6a, 0x2b, 0x76, 0x9a, 0x1a, 0x3c,
	0x0d, 0xc0, 0xef, 0x74, 0x6a, 0x53, 0xa7, 0x0f, 0x10, 0x52, 0xb1, 0x95, 0x1f, 0xe2, 0xff, 0x4e,
	0x21, 0x9c, 0x0c, 0xa4, 0xc6, 0x8c, 0x41, 0xf0, 0xda, 0x70, 0x3b, 0xa7, 0x1b, 0x70, 0xf7, 0x95,
	0x28, 0xea, 0xd6, 0x2b, 0x1c, 0x78, 0xbd, 0x98, 0x7b, 0x6a, 0x61, 0x7c, 0x06, 0x6e, 0xa9, 0xd7,
	0x85, 0x8e, 0x8e, 0x12, 0x94, 0x4d, 0xa9, 0x1d, 0xcc, 0x2d, 0x93, 0xd5, 0x4e, 0x47, 0x4e, 0x82,
	0x32, 0x97, 0xda, 0x21, 0x5d, 0x80, 0xdf, 0xfd, 0x44, 0x6d, 0x6a, 0x7c, 0x0b, 0x53, 0x2e, 0x59,
	0x19, 0xa1, 0xc4, 0xf9, 0x2b, 0x6d, 0x43, 0x98, 0x7f, 0x21, 0x38, 0xb6, 0x42, 0x8e, 0x97, 0xe0,
	0xd9, 0x12, 0x70, 0x44, 0xfa, 0xce, 0xc9, 0xa8, 0xcf, 0xf8, 0xfc, 0x00, 0x62, 0x96, 0x9c, 0xe0,
	0x67, 0x98, 0xf5, 0x8b, 0xe3, 0xcb, 0x01, 0xed, 0x77, 0x93, 0xf1, 0xc5, 0x61, 0xd0, 0xda, 0x2c,
	0xc1, 0xb3, 0x79, 0x46, 0x21, 0x46, 0x05, 0x8e, 0x42, 0x0c, 0xb6, 0x4e, 0x27, 0x4f, 0xfe, 0xdb,
	0xcf, 0x6b, 0xc9, 0xbd, 0xe6, 0x4d, 0xdc, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x64, 0x6f, 0xc6,
	0xfc, 0x50, 0x02, 0x00, 0x00,
}
