// Code generated by protoc-gen-box. DO NOT EDIT.
// source: proxy.proto

package proxy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	tr "github.com/tddhit/box/transport"
	tropt "github.com/tddhit/box/transport/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	context1 "golang.org/x/net/context"
	runtime "github.com/grpc-ecosystem/grpc-gateway/runtime"
	tr1 "github.com/tddhit/box/transport"
	trhttp "github.com/tddhit/box/transport/http"
	tropt1 "github.com/tddhit/box/transport/option"
)

import (
	context2 "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0e59e5288afd9655, []int{0}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type EchoReply struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoReply) Reset()         { *m = EchoReply{} }
func (m *EchoReply) String() string { return proto.CompactTextString(m) }
func (*EchoReply) ProtoMessage()    {}
func (*EchoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0e59e5288afd9655, []int{1}
}
func (m *EchoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoReply.Unmarshal(m, b)
}
func (m *EchoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoReply.Marshal(b, m, deterministic)
}
func (dst *EchoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoReply.Merge(dst, src)
}
func (m *EchoReply) XXX_Size() int {
	return xxx_messageInfo_EchoReply.Size(m)
}
func (m *EchoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoReply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoReply proto.InternalMessageInfo

func (m *EchoReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "proxy.EchoRequest")
	proto.RegisterType((*EchoReply)(nil), "proxy.EchoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ tr.Server
var _ tr.ClientConn
var _ tropt.CallOption

type ProxyGrpcClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...tropt.CallOption) (*EchoReply, error)
}

type proxyGrpcClient struct {
	cc tr.ClientConn
}

func NewProxyGrpcClient(cc tr.ClientConn) ProxyGrpcClient {
	return &proxyGrpcClient{cc}
}

func (c *proxyGrpcClient) Echo(ctx context.Context, in *EchoRequest, opts ...tropt.CallOption) (*EchoReply, error) {
	out := new(EchoReply)
	err := c.cc.Invoke(ctx, "/proxy.Proxy/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type proxyGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *proxyGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyGrpcServiceDesc = &proxyGrpcServiceDesc{&_Proxy_serviceDesc}

type ProxyHttpClient interface {
	Echo(ctx context1.Context, in *EchoRequest, opts ...tropt1.CallOption) (*EchoReply, error)
}

type proxyHttpClient struct {
	cc tr1.ClientConn
}

func NewProxyHttpClient(cc tr1.ClientConn) ProxyHttpClient {
	return &proxyHttpClient{cc}
}

func (c *proxyHttpClient) Echo(ctx context1.Context, in *EchoRequest, opts ...tropt1.CallOption) (*EchoReply, error) {
	out := new(EchoReply)
	pattern := _Proxy_Http_serviceDesc.Pattern["Echo"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Proxy_Http_serviceDesc = trhttp.ServiceDesc{
	ServiceDesc: &_Proxy_serviceDesc,
	Pattern: map[string]runtime.Pattern{
		"Echo": pattern_Proxy_Echo,
	},
}

type proxyHttpServiceDesc struct {
	desc *trhttp.ServiceDesc
}

func (d *proxyHttpServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyHttpServiceDesc = &proxyHttpServiceDesc{&_Proxy_Http_serviceDesc}

var (
	pattern_Proxy_Echo = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"echo"}, ""))
)

// Reference imports to suppress errors if they are not otherwise used.
var _ context2.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	Echo(ctx context2.Context, in *EchoRequest, opts ...grpc1.CallOption) (*EchoReply, error)
}

type proxyClient struct {
	cc *grpc1.ClientConn
}

func NewProxyClient(cc *grpc1.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Echo(ctx context2.Context, in *EchoRequest, opts ...grpc1.CallOption) (*EchoReply, error) {
	out := new(EchoReply)
	err := c.cc.Invoke(ctx, "/proxy.Proxy/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	Echo(context2.Context, *EchoRequest) (*EchoReply, error)
}

func RegisterProxyServer(s *grpc1.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Echo_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Echo(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Proxy/Echo",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "proxy.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Proxy_Echo_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "proxy.proto",
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_proxy_0e59e5288afd9655) }

var fileDescriptor_proxy_0e59e5288afd9655 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x28, 0xca, 0xaf,
	0xa8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0xa4, 0x64, 0xd2, 0xf3, 0xf3,
	0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0x32,
	0xf3, 0xf3, 0x8a, 0x21, 0x8a, 0x94, 0xe4, 0xb9, 0xb8, 0x5d, 0x93, 0x33, 0xf2, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0x73, 0x8b, 0xd3, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x40, 0x4c, 0x25, 0x59, 0x2e, 0x4e, 0x88, 0x82, 0x82, 0x9c, 0x4a, 0x4c, 0x69, 0x23,
	0x77, 0x2e, 0xd6, 0x00, 0x90, 0x35, 0x42, 0x76, 0x5c, 0x2c, 0x20, 0x75, 0x42, 0x42, 0x7a, 0x10,
	0x37, 0x20, 0x99, 0x2a, 0x25, 0x80, 0x22, 0x56, 0x90, 0x53, 0xa9, 0x24, 0xd0, 0x74, 0xf9, 0xc9,
	0x64, 0x26, 0x2e, 0x2b, 0x46, 0x2d, 0x25, 0x56, 0xfd, 0xd4, 0xe4, 0x8c, 0xfc, 0x24, 0x36, 0xb0,
	0x7b, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x83, 0x37, 0x16, 0xfa, 0xc3, 0x00, 0x00, 0x00,
}
