// Code generated by protoc-gen-box. DO NOT EDIT.
// source: proxy.proto

package proxypb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import pb "github.com/tddhit/xsearch/pb"

import (
	tr "github.com/tddhit/box/transport"
	tropt "github.com/tddhit/box/transport/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	runtime "github.com/grpc-ecosystem/grpc-gateway/runtime"
	tr1 "github.com/tddhit/box/transport"
	trhttp "github.com/tddhit/box/transport/http"
	tropt1 "github.com/tddhit/box/transport/option"
	context1 "golang.org/x/net/context"
)

import (
	context2 "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IndexDocReq struct {
	Namespace            string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Doc                  *pb.Document `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *IndexDocReq) Reset()         { *m = IndexDocReq{} }
func (m *IndexDocReq) String() string { return proto.CompactTextString(m) }
func (*IndexDocReq) ProtoMessage()    {}
func (*IndexDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{0}
}
func (m *IndexDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocReq.Unmarshal(m, b)
}
func (m *IndexDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocReq.Marshal(b, m, deterministic)
}
func (dst *IndexDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocReq.Merge(dst, src)
}
func (m *IndexDocReq) XXX_Size() int {
	return xxx_messageInfo_IndexDocReq.Size(m)
}
func (m *IndexDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocReq proto.InternalMessageInfo

func (m *IndexDocReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *IndexDocReq) GetDoc() *pb.Document {
	if m != nil {
		return m.Doc
	}
	return nil
}

type IndexDocRsp struct {
	DocID                string   `protobuf:"bytes,1,opt,name=docID,proto3" json:"docID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocRsp) Reset()         { *m = IndexDocRsp{} }
func (m *IndexDocRsp) String() string { return proto.CompactTextString(m) }
func (*IndexDocRsp) ProtoMessage()    {}
func (*IndexDocRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{1}
}
func (m *IndexDocRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocRsp.Unmarshal(m, b)
}
func (m *IndexDocRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocRsp.Marshal(b, m, deterministic)
}
func (dst *IndexDocRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocRsp.Merge(dst, src)
}
func (m *IndexDocRsp) XXX_Size() int {
	return xxx_messageInfo_IndexDocRsp.Size(m)
}
func (m *IndexDocRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocRsp.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocRsp proto.InternalMessageInfo

func (m *IndexDocRsp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

type RemoveDocReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DocID                string   `protobuf:"bytes,2,opt,name=docID,proto3" json:"docID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDocReq) Reset()         { *m = RemoveDocReq{} }
func (m *RemoveDocReq) String() string { return proto.CompactTextString(m) }
func (*RemoveDocReq) ProtoMessage()    {}
func (*RemoveDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{2}
}
func (m *RemoveDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocReq.Unmarshal(m, b)
}
func (m *RemoveDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocReq.Marshal(b, m, deterministic)
}
func (dst *RemoveDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocReq.Merge(dst, src)
}
func (m *RemoveDocReq) XXX_Size() int {
	return xxx_messageInfo_RemoveDocReq.Size(m)
}
func (m *RemoveDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocReq proto.InternalMessageInfo

func (m *RemoveDocReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RemoveDocReq) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

type RemoveDocRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDocRsp) Reset()         { *m = RemoveDocRsp{} }
func (m *RemoveDocRsp) String() string { return proto.CompactTextString(m) }
func (*RemoveDocRsp) ProtoMessage()    {}
func (*RemoveDocRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{3}
}
func (m *RemoveDocRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocRsp.Unmarshal(m, b)
}
func (m *RemoveDocRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocRsp.Marshal(b, m, deterministic)
}
func (dst *RemoveDocRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocRsp.Merge(dst, src)
}
func (m *RemoveDocRsp) XXX_Size() int {
	return xxx_messageInfo_RemoveDocRsp.Size(m)
}
func (m *RemoveDocRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocRsp proto.InternalMessageInfo

type SearchReq struct {
	Namespace            string    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Query                *pb.Query `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Start                uint64    `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchReq) Reset()         { *m = SearchReq{} }
func (m *SearchReq) String() string { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()    {}
func (*SearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{4}
}
func (m *SearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReq.Unmarshal(m, b)
}
func (m *SearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReq.Marshal(b, m, deterministic)
}
func (dst *SearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReq.Merge(dst, src)
}
func (m *SearchReq) XXX_Size() int {
	return xxx_messageInfo_SearchReq.Size(m)
}
func (m *SearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReq proto.InternalMessageInfo

func (m *SearchReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SearchReq) GetQuery() *pb.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchReq) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchReq) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRsp struct {
	Docs                 []*pb.Document `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchRsp) Reset()         { *m = SearchRsp{} }
func (m *SearchRsp) String() string { return proto.CompactTextString(m) }
func (*SearchRsp) ProtoMessage()    {}
func (*SearchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_0bf4a21753a221f5, []int{5}
}
func (m *SearchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRsp.Unmarshal(m, b)
}
func (m *SearchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRsp.Marshal(b, m, deterministic)
}
func (dst *SearchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRsp.Merge(dst, src)
}
func (m *SearchRsp) XXX_Size() int {
	return xxx_messageInfo_SearchRsp.Size(m)
}
func (m *SearchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRsp proto.InternalMessageInfo

func (m *SearchRsp) GetDocs() []*pb.Document {
	if m != nil {
		return m.Docs
	}
	return nil
}

func init() {
	proto.RegisterType((*IndexDocReq)(nil), "proxypb.IndexDocReq")
	proto.RegisterType((*IndexDocRsp)(nil), "proxypb.IndexDocRsp")
	proto.RegisterType((*RemoveDocReq)(nil), "proxypb.RemoveDocReq")
	proto.RegisterType((*RemoveDocRsp)(nil), "proxypb.RemoveDocRsp")
	proto.RegisterType((*SearchReq)(nil), "proxypb.SearchReq")
	proto.RegisterType((*SearchRsp)(nil), "proxypb.SearchRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ tr.Server
var _ tr.ClientConn
var _ tropt.CallOption

type ProxyGrpcClient interface {
	IndexDoc(ctx context.Context, in *IndexDocReq, opts ...tropt.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context.Context, in *RemoveDocReq, opts ...tropt.CallOption) (*RemoveDocRsp, error)
	Search(ctx context.Context, in *SearchReq, opts ...tropt.CallOption) (*SearchRsp, error)
}

type proxyGrpcClient struct {
	cc tr.ClientConn
}

func NewProxyGrpcClient(cc tr.ClientConn) ProxyGrpcClient {
	return &proxyGrpcClient{cc}
}

func (c *proxyGrpcClient) IndexDoc(ctx context.Context, in *IndexDocReq, opts ...tropt.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/IndexDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyGrpcClient) RemoveDoc(ctx context.Context, in *RemoveDocReq, opts ...tropt.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyGrpcClient) Search(ctx context.Context, in *SearchReq, opts ...tropt.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type proxyGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *proxyGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyGrpcServiceDesc = &proxyGrpcServiceDesc{&_Proxy_serviceDesc}

type ProxyHttpClient interface {
	IndexDoc(ctx context1.Context, in *IndexDocReq, opts ...tropt1.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context1.Context, in *RemoveDocReq, opts ...tropt1.CallOption) (*RemoveDocRsp, error)
	Search(ctx context1.Context, in *SearchReq, opts ...tropt1.CallOption) (*SearchRsp, error)
}

type proxyHttpClient struct {
	cc tr1.ClientConn
}

func NewProxyHttpClient(cc tr1.ClientConn) ProxyHttpClient {
	return &proxyHttpClient{cc}
}

func (c *proxyHttpClient) IndexDoc(ctx context1.Context, in *IndexDocReq, opts ...tropt1.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["IndexDoc"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyHttpClient) RemoveDoc(ctx context1.Context, in *RemoveDocReq, opts ...tropt1.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["RemoveDoc"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyHttpClient) Search(ctx context1.Context, in *SearchReq, opts ...tropt1.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["Search"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Proxy_Http_serviceDesc = trhttp.ServiceDesc{
	ServiceDesc: &_Proxy_serviceDesc,
	Pattern: map[string]runtime.Pattern{
		"IndexDoc":  pattern_Proxy_IndexDoc,
		"RemoveDoc": pattern_Proxy_RemoveDoc,
		"Search":    pattern_Proxy_Search,
	},
}

type proxyHttpServiceDesc struct {
	desc *trhttp.ServiceDesc
}

func (d *proxyHttpServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyHttpServiceDesc = &proxyHttpServiceDesc{&_Proxy_Http_serviceDesc}

var (
	pattern_Proxy_IndexDoc  = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"indexDoc"}, ""))
	pattern_Proxy_RemoveDoc = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"removeDoc"}, ""))
	pattern_Proxy_Search    = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"search"}, ""))
)

// Reference imports to suppress errors if they are not otherwise used.
var _ context2.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	IndexDoc(ctx context2.Context, in *IndexDocReq, opts ...grpc1.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context2.Context, in *RemoveDocReq, opts ...grpc1.CallOption) (*RemoveDocRsp, error)
	Search(ctx context2.Context, in *SearchReq, opts ...grpc1.CallOption) (*SearchRsp, error)
}

type proxyClient struct {
	cc *grpc1.ClientConn
}

func NewProxyClient(cc *grpc1.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) IndexDoc(ctx context2.Context, in *IndexDocReq, opts ...grpc1.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/IndexDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) RemoveDoc(ctx context2.Context, in *RemoveDocReq, opts ...grpc1.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) Search(ctx context2.Context, in *SearchReq, opts ...grpc1.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	IndexDoc(context2.Context, *IndexDocReq) (*IndexDocRsp, error)
	RemoveDoc(context2.Context, *RemoveDocReq) (*RemoveDocRsp, error)
	Search(context2.Context, *SearchReq) (*SearchRsp, error)
}

func RegisterProxyServer(s *grpc1.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_IndexDoc_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexDocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).IndexDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/IndexDoc",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).IndexDoc(ctx, req.(*IndexDocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_RemoveDoc_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).RemoveDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/RemoveDoc",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).RemoveDoc(ctx, req.(*RemoveDocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_Search_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Search(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/Search",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "proxypb.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "IndexDoc",
			Handler:    _Proxy_IndexDoc_Handler,
		},
		{
			MethodName: "RemoveDoc",
			Handler:    _Proxy_RemoveDoc_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Proxy_Search_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "proxy.proto",
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_proxy_0bf4a21753a221f5) }

var fileDescriptor_proxy_0bf4a21753a221f5 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x3f, 0x4e, 0xc3, 0x30,
	0x14, 0xc6, 0xe5, 0xfe, 0x25, 0x6e, 0x29, 0xc8, 0xb4, 0x52, 0x14, 0x75, 0x88, 0x8c, 0x80, 0x88,
	0x21, 0x91, 0x0a, 0x13, 0x23, 0xca, 0x52, 0x89, 0xa1, 0x98, 0x13, 0x24, 0x8e, 0x55, 0x2a, 0xd1,
	0x3c, 0x37, 0x4e, 0x51, 0x3b, 0xb0, 0x70, 0x05, 0x8e, 0xc6, 0x15, 0x58, 0xb9, 0x03, 0x4a, 0x9c,
	0x9a, 0x48, 0x14, 0xc1, 0x96, 0xef, 0x7b, 0xf6, 0xef, 0xe5, 0x7d, 0xcf, 0xb8, 0x27, 0x33, 0xd8,
	0x6c, 0x7d, 0x99, 0x41, 0x0e, 0xa4, 0x5b, 0x0a, 0x19, 0x3b, 0xe3, 0x39, 0xc0, 0xfc, 0x49, 0x04,
	0x91, 0x5c, 0x04, 0x51, 0x9a, 0x42, 0x1e, 0xe5, 0x0b, 0x48, 0x95, 0x3e, 0xe6, 0xd8, 0x1b, 0x25,
	0xa2, 0x8c, 0x3f, 0x06, 0x32, 0x0e, 0xaa, 0x4f, 0x5d, 0xa1, 0x0c, 0xf7, 0xa6, 0x69, 0x22, 0x36,
	0x21, 0x70, 0x26, 0x56, 0x64, 0x8c, 0xad, 0x34, 0x5a, 0x0a, 0x25, 0x23, 0x2e, 0x6c, 0xe4, 0x22,
	0xcf, 0x62, 0xdf, 0x06, 0x39, 0xc3, 0xcd, 0x04, 0xb8, 0xdd, 0x70, 0x91, 0xd7, 0x9b, 0x9c, 0xf8,
	0x15, 0x49, 0xc6, 0x7e, 0x08, 0x7c, 0xbd, 0x14, 0x69, 0xce, 0x8a, 0x3a, 0x3d, 0xad, 0x31, 0x95,
	0x24, 0x43, 0xdc, 0x4e, 0x80, 0x4f, 0xc3, 0x8a, 0xa7, 0x05, 0xbd, 0xc5, 0x7d, 0x26, 0x96, 0xf0,
	0x2c, 0xfe, 0xd5, 0xd9, 0x30, 0x1a, 0x75, 0xc6, 0xa0, 0xce, 0x50, 0x92, 0xbe, 0x60, 0xeb, 0xa1,
	0xfc, 0xa5, 0xbf, 0x81, 0xe7, 0xb8, 0xbd, 0x5a, 0x8b, 0x6c, 0x5b, 0x0d, 0x73, 0x5c, 0x1b, 0xe6,
	0xbe, 0xf0, 0x99, 0x2e, 0x17, 0x8d, 0x55, 0x1e, 0x65, 0xb9, 0xdd, 0x74, 0x91, 0xd7, 0x62, 0x5a,
	0x14, 0x2e, 0x87, 0x75, 0x9a, 0xdb, 0x2d, 0x17, 0x79, 0x87, 0x4c, 0x0b, 0x7a, 0x6d, 0xda, 0x2b,
	0x49, 0x2e, 0x70, 0x2b, 0x01, 0xae, 0x6c, 0xe4, 0x36, 0x7f, 0x0b, 0xab, 0x3c, 0x30, 0xf9, 0x44,
	0xb8, 0x3d, 0x2b, 0xb6, 0x48, 0xee, 0xf0, 0xc1, 0x2e, 0x37, 0x32, 0xf4, 0xab, 0xcd, 0xfa, 0xb5,
	0xf5, 0x38, 0x7b, 0x5c, 0x25, 0xe9, 0xf0, 0xf5, 0xfd, 0xe3, 0xad, 0x31, 0xb8, 0x41, 0x97, 0xd4,
	0x0a, 0x16, 0x3b, 0xc2, 0x0c, 0x5b, 0x26, 0x1c, 0x32, 0x32, 0x17, 0xeb, 0xa1, 0x3b, 0xfb, 0x6c,
	0x25, 0xe9, 0xa8, 0x04, 0x1e, 0x15, 0x40, 0x1c, 0x64, 0x06, 0x12, 0xe2, 0x8e, 0x9e, 0x8f, 0x10,
	0x73, 0xcf, 0xe4, 0xed, 0xfc, 0xf0, 0x94, 0xa4, 0xa4, 0x04, 0xf5, 0x0b, 0x50, 0x37, 0xd0, 0x01,
	0xc4, 0x9d, 0xf2, 0xe1, 0x5d, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0x02, 0x1d, 0xa7, 0x76, 0xc8,
	0x02, 0x00, 0x00,
}
