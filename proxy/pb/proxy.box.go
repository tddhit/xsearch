// Code generated by protoc-gen-box. DO NOT EDIT.
// source: proxy.proto

package proxypb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import pb "github.com/tddhit/xsearch/pb"

import (
	tr "github.com/tddhit/box/transport"
	tropt "github.com/tddhit/box/transport/option"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import (
	runtime "github.com/grpc-ecosystem/grpc-gateway/runtime"
	tr1 "github.com/tddhit/box/transport"
	trhttp "github.com/tddhit/box/transport/http"
	tropt1 "github.com/tddhit/box/transport/option"
	context1 "golang.org/x/net/context"
)

import (
	context2 "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{0}
}
func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (dst *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(dst, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

type InfoRsp struct {
	Tables               map[string]*InfoRsp_Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *InfoRsp) Reset()         { *m = InfoRsp{} }
func (m *InfoRsp) String() string { return proto.CompactTextString(m) }
func (*InfoRsp) ProtoMessage()    {}
func (*InfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{1}
}
func (m *InfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRsp.Unmarshal(m, b)
}
func (m *InfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRsp.Marshal(b, m, deterministic)
}
func (dst *InfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRsp.Merge(dst, src)
}
func (m *InfoRsp) XXX_Size() int {
	return xxx_messageInfo_InfoRsp.Size(m)
}
func (m *InfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRsp proto.InternalMessageInfo

func (m *InfoRsp) GetTables() map[string]*InfoRsp_Table {
	if m != nil {
		return m.Tables
	}
	return nil
}

type InfoRsp_Shard struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRsp_Shard) Reset()         { *m = InfoRsp_Shard{} }
func (m *InfoRsp_Shard) String() string { return proto.CompactTextString(m) }
func (*InfoRsp_Shard) ProtoMessage()    {}
func (*InfoRsp_Shard) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{1, 0}
}
func (m *InfoRsp_Shard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRsp_Shard.Unmarshal(m, b)
}
func (m *InfoRsp_Shard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRsp_Shard.Marshal(b, m, deterministic)
}
func (dst *InfoRsp_Shard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRsp_Shard.Merge(dst, src)
}
func (m *InfoRsp_Shard) XXX_Size() int {
	return xxx_messageInfo_InfoRsp_Shard.Size(m)
}
func (m *InfoRsp_Shard) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRsp_Shard.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRsp_Shard proto.InternalMessageInfo

func (m *InfoRsp_Shard) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *InfoRsp_Shard) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type InfoRsp_Table struct {
	Namespace            string           `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ShardNum             uint32           `protobuf:"varint,2,opt,name=shardNum,proto3" json:"shardNum,omitempty"`
	ReplicaFactor        uint32           `protobuf:"varint,3,opt,name=replicaFactor,proto3" json:"replicaFactor,omitempty"`
	Shards               []*InfoRsp_Shard `protobuf:"bytes,4,rep,name=shards,proto3" json:"shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InfoRsp_Table) Reset()         { *m = InfoRsp_Table{} }
func (m *InfoRsp_Table) String() string { return proto.CompactTextString(m) }
func (*InfoRsp_Table) ProtoMessage()    {}
func (*InfoRsp_Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{1, 1}
}
func (m *InfoRsp_Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRsp_Table.Unmarshal(m, b)
}
func (m *InfoRsp_Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRsp_Table.Marshal(b, m, deterministic)
}
func (dst *InfoRsp_Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRsp_Table.Merge(dst, src)
}
func (m *InfoRsp_Table) XXX_Size() int {
	return xxx_messageInfo_InfoRsp_Table.Size(m)
}
func (m *InfoRsp_Table) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRsp_Table.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRsp_Table proto.InternalMessageInfo

func (m *InfoRsp_Table) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *InfoRsp_Table) GetShardNum() uint32 {
	if m != nil {
		return m.ShardNum
	}
	return 0
}

func (m *InfoRsp_Table) GetReplicaFactor() uint32 {
	if m != nil {
		return m.ReplicaFactor
	}
	return 0
}

func (m *InfoRsp_Table) GetShards() []*InfoRsp_Shard {
	if m != nil {
		return m.Shards
	}
	return nil
}

type IndexDocReq struct {
	TraceID              string       `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Namespace            string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Doc                  *pb.Document `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *IndexDocReq) Reset()         { *m = IndexDocReq{} }
func (m *IndexDocReq) String() string { return proto.CompactTextString(m) }
func (*IndexDocReq) ProtoMessage()    {}
func (*IndexDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{2}
}
func (m *IndexDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocReq.Unmarshal(m, b)
}
func (m *IndexDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocReq.Marshal(b, m, deterministic)
}
func (dst *IndexDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocReq.Merge(dst, src)
}
func (m *IndexDocReq) XXX_Size() int {
	return xxx_messageInfo_IndexDocReq.Size(m)
}
func (m *IndexDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocReq proto.InternalMessageInfo

func (m *IndexDocReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *IndexDocReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *IndexDocReq) GetDoc() *pb.Document {
	if m != nil {
		return m.Doc
	}
	return nil
}

type IndexDocRsp struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	DocID                string   `protobuf:"bytes,2,opt,name=docID,proto3" json:"docID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocRsp) Reset()         { *m = IndexDocRsp{} }
func (m *IndexDocRsp) String() string { return proto.CompactTextString(m) }
func (*IndexDocRsp) ProtoMessage()    {}
func (*IndexDocRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{3}
}
func (m *IndexDocRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocRsp.Unmarshal(m, b)
}
func (m *IndexDocRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocRsp.Marshal(b, m, deterministic)
}
func (dst *IndexDocRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocRsp.Merge(dst, src)
}
func (m *IndexDocRsp) XXX_Size() int {
	return xxx_messageInfo_IndexDocRsp.Size(m)
}
func (m *IndexDocRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocRsp.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocRsp proto.InternalMessageInfo

func (m *IndexDocRsp) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *IndexDocRsp) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

type RemoveDocReq struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DocID                string   `protobuf:"bytes,3,opt,name=docID,proto3" json:"docID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDocReq) Reset()         { *m = RemoveDocReq{} }
func (m *RemoveDocReq) String() string { return proto.CompactTextString(m) }
func (*RemoveDocReq) ProtoMessage()    {}
func (*RemoveDocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{4}
}
func (m *RemoveDocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocReq.Unmarshal(m, b)
}
func (m *RemoveDocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocReq.Marshal(b, m, deterministic)
}
func (dst *RemoveDocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocReq.Merge(dst, src)
}
func (m *RemoveDocReq) XXX_Size() int {
	return xxx_messageInfo_RemoveDocReq.Size(m)
}
func (m *RemoveDocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocReq proto.InternalMessageInfo

func (m *RemoveDocReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *RemoveDocReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RemoveDocReq) GetDocID() string {
	if m != nil {
		return m.DocID
	}
	return ""
}

type RemoveDocRsp struct {
	TraceID              string   `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDocRsp) Reset()         { *m = RemoveDocRsp{} }
func (m *RemoveDocRsp) String() string { return proto.CompactTextString(m) }
func (*RemoveDocRsp) ProtoMessage()    {}
func (*RemoveDocRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{5}
}
func (m *RemoveDocRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDocRsp.Unmarshal(m, b)
}
func (m *RemoveDocRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDocRsp.Marshal(b, m, deterministic)
}
func (dst *RemoveDocRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDocRsp.Merge(dst, src)
}
func (m *RemoveDocRsp) XXX_Size() int {
	return xxx_messageInfo_RemoveDocRsp.Size(m)
}
func (m *RemoveDocRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDocRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDocRsp proto.InternalMessageInfo

func (m *RemoveDocRsp) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

type SearchReq struct {
	TraceID              string    `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Namespace            string    `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Query                *pb.Query `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Start                uint64    `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchReq) Reset()         { *m = SearchReq{} }
func (m *SearchReq) String() string { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()    {}
func (*SearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{6}
}
func (m *SearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReq.Unmarshal(m, b)
}
func (m *SearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReq.Marshal(b, m, deterministic)
}
func (dst *SearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReq.Merge(dst, src)
}
func (m *SearchReq) XXX_Size() int {
	return xxx_messageInfo_SearchReq.Size(m)
}
func (m *SearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReq proto.InternalMessageInfo

func (m *SearchReq) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *SearchReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SearchReq) GetQuery() *pb.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchReq) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchReq) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRsp struct {
	TraceID              string         `protobuf:"bytes,1,opt,name=traceID,proto3" json:"traceID,omitempty"`
	Query                *pb.Query      `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Docs                 []*pb.Document `protobuf:"bytes,3,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchRsp) Reset()         { *m = SearchRsp{} }
func (m *SearchRsp) String() string { return proto.CompactTextString(m) }
func (*SearchRsp) ProtoMessage()    {}
func (*SearchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_fb6c9079ff564073, []int{7}
}
func (m *SearchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRsp.Unmarshal(m, b)
}
func (m *SearchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRsp.Marshal(b, m, deterministic)
}
func (dst *SearchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRsp.Merge(dst, src)
}
func (m *SearchRsp) XXX_Size() int {
	return xxx_messageInfo_SearchRsp.Size(m)
}
func (m *SearchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRsp proto.InternalMessageInfo

func (m *SearchRsp) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *SearchRsp) GetQuery() *pb.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchRsp) GetDocs() []*pb.Document {
	if m != nil {
		return m.Docs
	}
	return nil
}

func init() {
	proto.RegisterType((*InfoReq)(nil), "proxypb.InfoReq")
	proto.RegisterType((*InfoRsp)(nil), "proxypb.InfoRsp")
	proto.RegisterMapType((map[string]*InfoRsp_Table)(nil), "proxypb.InfoRsp.TablesEntry")
	proto.RegisterType((*InfoRsp_Shard)(nil), "proxypb.InfoRsp.Shard")
	proto.RegisterType((*InfoRsp_Table)(nil), "proxypb.InfoRsp.Table")
	proto.RegisterType((*IndexDocReq)(nil), "proxypb.IndexDocReq")
	proto.RegisterType((*IndexDocRsp)(nil), "proxypb.IndexDocRsp")
	proto.RegisterType((*RemoveDocReq)(nil), "proxypb.RemoveDocReq")
	proto.RegisterType((*RemoveDocRsp)(nil), "proxypb.RemoveDocRsp")
	proto.RegisterType((*SearchReq)(nil), "proxypb.SearchReq")
	proto.RegisterType((*SearchRsp)(nil), "proxypb.SearchRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ tr.Server
var _ tr.ClientConn
var _ tropt.CallOption

type AdminGrpcClient interface {
	Info(ctx context.Context, in *InfoReq, opts ...tropt.CallOption) (*InfoRsp, error)
}

type adminGrpcClient struct {
	cc tr.ClientConn
}

func NewAdminGrpcClient(cc tr.ClientConn) AdminGrpcClient {
	return &adminGrpcClient{cc}
}

func (c *adminGrpcClient) Info(ctx context.Context, in *InfoReq, opts ...tropt.CallOption) (*InfoRsp, error) {
	out := new(InfoRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Admin/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type adminGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *adminGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var AdminGrpcServiceDesc = &adminGrpcServiceDesc{&_Admin_serviceDesc}

type ProxyGrpcClient interface {
	IndexDoc(ctx context.Context, in *IndexDocReq, opts ...tropt.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context.Context, in *RemoveDocReq, opts ...tropt.CallOption) (*RemoveDocRsp, error)
	Search(ctx context.Context, in *SearchReq, opts ...tropt.CallOption) (*SearchRsp, error)
}

type proxyGrpcClient struct {
	cc tr.ClientConn
}

func NewProxyGrpcClient(cc tr.ClientConn) ProxyGrpcClient {
	return &proxyGrpcClient{cc}
}

func (c *proxyGrpcClient) IndexDoc(ctx context.Context, in *IndexDocReq, opts ...tropt.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/IndexDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyGrpcClient) RemoveDoc(ctx context.Context, in *RemoveDocReq, opts ...tropt.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyGrpcClient) Search(ctx context.Context, in *SearchReq, opts ...tropt.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type proxyGrpcServiceDesc struct {
	desc *grpc.ServiceDesc
}

func (d *proxyGrpcServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyGrpcServiceDesc = &proxyGrpcServiceDesc{&_Proxy_serviceDesc}

type AdminHttpClient interface {
	Info(ctx context1.Context, in *InfoReq, opts ...tropt1.CallOption) (*InfoRsp, error)
}

type adminHttpClient struct {
	cc tr1.ClientConn
}

func NewAdminHttpClient(cc tr1.ClientConn) AdminHttpClient {
	return &adminHttpClient{cc}
}

func (c *adminHttpClient) Info(ctx context1.Context, in *InfoReq, opts ...tropt1.CallOption) (*InfoRsp, error) {
	out := new(InfoRsp)
	pattern := _Admin_Http_serviceDesc.Pattern["Info"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Admin_Http_serviceDesc = trhttp.ServiceDesc{
	ServiceDesc: &_Admin_serviceDesc,
	Pattern: map[string]runtime.Pattern{
		"Info": pattern_Admin_Info,
	},
}

type adminHttpServiceDesc struct {
	desc *trhttp.ServiceDesc
}

func (d *adminHttpServiceDesc) Desc() interface{} {
	return d.desc
}

var AdminHttpServiceDesc = &adminHttpServiceDesc{&_Admin_Http_serviceDesc}

var (
	pattern_Admin_Info = runtime.MustPattern(runtime.NewPattern(1, []int(nil), []string(nil), ""))
)

type ProxyHttpClient interface {
	IndexDoc(ctx context1.Context, in *IndexDocReq, opts ...tropt1.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context1.Context, in *RemoveDocReq, opts ...tropt1.CallOption) (*RemoveDocRsp, error)
	Search(ctx context1.Context, in *SearchReq, opts ...tropt1.CallOption) (*SearchRsp, error)
}

type proxyHttpClient struct {
	cc tr1.ClientConn
}

func NewProxyHttpClient(cc tr1.ClientConn) ProxyHttpClient {
	return &proxyHttpClient{cc}
}

func (c *proxyHttpClient) IndexDoc(ctx context1.Context, in *IndexDocReq, opts ...tropt1.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["IndexDoc"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyHttpClient) RemoveDoc(ctx context1.Context, in *RemoveDocReq, opts ...tropt1.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["RemoveDoc"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyHttpClient) Search(ctx context1.Context, in *SearchReq, opts ...tropt1.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	pattern := _Proxy_Http_serviceDesc.Pattern["Search"]
	err := c.cc.Invoke(ctx, pattern.String(), in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Proxy_Http_serviceDesc = trhttp.ServiceDesc{
	ServiceDesc: &_Proxy_serviceDesc,
	Pattern: map[string]runtime.Pattern{
		"IndexDoc":  pattern_Proxy_IndexDoc,
		"RemoveDoc": pattern_Proxy_RemoveDoc,
		"Search":    pattern_Proxy_Search,
	},
}

type proxyHttpServiceDesc struct {
	desc *trhttp.ServiceDesc
}

func (d *proxyHttpServiceDesc) Desc() interface{} {
	return d.desc
}

var ProxyHttpServiceDesc = &proxyHttpServiceDesc{&_Proxy_Http_serviceDesc}

var (
	pattern_Proxy_IndexDoc  = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"indexDoc"}, ""))
	pattern_Proxy_RemoveDoc = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"removeDoc"}, ""))
	pattern_Proxy_Search    = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0}, []string{"search"}, ""))
)

// Reference imports to suppress errors if they are not otherwise used.
var _ context2.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	Info(ctx context2.Context, in *InfoReq, opts ...grpc1.CallOption) (*InfoRsp, error)
}

type adminClient struct {
	cc *grpc1.ClientConn
}

func NewAdminClient(cc *grpc1.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) Info(ctx context2.Context, in *InfoReq, opts ...grpc1.CallOption) (*InfoRsp, error) {
	out := new(InfoRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Admin/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	Info(context2.Context, *InfoReq) (*InfoRsp, error)
}

func RegisterAdminServer(s *grpc1.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_Info_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Info(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Admin/Info",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Info(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "proxypb.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Admin_Info_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "proxy.proto",
}

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	IndexDoc(ctx context2.Context, in *IndexDocReq, opts ...grpc1.CallOption) (*IndexDocRsp, error)
	RemoveDoc(ctx context2.Context, in *RemoveDocReq, opts ...grpc1.CallOption) (*RemoveDocRsp, error)
	Search(ctx context2.Context, in *SearchReq, opts ...grpc1.CallOption) (*SearchRsp, error)
}

type proxyClient struct {
	cc *grpc1.ClientConn
}

func NewProxyClient(cc *grpc1.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) IndexDoc(ctx context2.Context, in *IndexDocReq, opts ...grpc1.CallOption) (*IndexDocRsp, error) {
	out := new(IndexDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/IndexDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) RemoveDoc(ctx context2.Context, in *RemoveDocReq, opts ...grpc1.CallOption) (*RemoveDocRsp, error) {
	out := new(RemoveDocRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/RemoveDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) Search(ctx context2.Context, in *SearchReq, opts ...grpc1.CallOption) (*SearchRsp, error) {
	out := new(SearchRsp)
	err := c.cc.Invoke(ctx, "/proxypb.Proxy/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	IndexDoc(context2.Context, *IndexDocReq) (*IndexDocRsp, error)
	RemoveDoc(context2.Context, *RemoveDocReq) (*RemoveDocRsp, error)
	Search(context2.Context, *SearchReq) (*SearchRsp, error)
}

func RegisterProxyServer(s *grpc1.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_IndexDoc_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexDocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).IndexDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/IndexDoc",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).IndexDoc(ctx, req.(*IndexDocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_RemoveDoc_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).RemoveDoc(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/RemoveDoc",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).RemoveDoc(ctx, req.(*RemoveDocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_Search_Handler(srv interface{}, ctx context2.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Search(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxypb.Proxy/Search",
	}
	handler := func(ctx context2.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "proxypb.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "IndexDoc",
			Handler:    _Proxy_IndexDoc_Handler,
		},
		{
			MethodName: "RemoveDoc",
			Handler:    _Proxy_RemoveDoc_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Proxy_Search_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "proxy.proto",
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_proxy_fb6c9079ff564073) }

var fileDescriptor_proxy_fb6c9079ff564073 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x5f, 0x49, 0x3d, 0x69, 0x4b, 0xb4, 0xb4, 0xc8, 0xb2, 0x7a, 0x88, 0x56, 0x7c, 0x44,
	0x50, 0xd9, 0x52, 0x00, 0x09, 0x55, 0xe2, 0x80, 0x64, 0x90, 0x22, 0x21, 0xd4, 0xba, 0x1c, 0xb9,
	0x6c, 0xec, 0xa5, 0x8d, 0x48, 0xbc, 0x1b, 0xef, 0x26, 0x4a, 0xae, 0xfc, 0x05, 0x0e, 0xfd, 0x61,
	0x9c, 0xb8, 0x73, 0xe5, 0x3f, 0x20, 0xaf, 0x37, 0x8b, 0xd3, 0x46, 0xb9, 0xf4, 0xb6, 0xf3, 0x66,
	0xe6, 0xcd, 0xcc, 0xf3, 0x93, 0xa1, 0xc3, 0x4b, 0xb6, 0x5c, 0x45, 0xbc, 0x64, 0x92, 0xa1, 0xb6,
	0x0a, 0xf8, 0x28, 0x3c, 0xb9, 0x62, 0xec, 0x6a, 0x42, 0x63, 0xc2, 0xc7, 0x31, 0x29, 0x0a, 0x26,
	0x89, 0x1c, 0xb3, 0x42, 0xd4, 0x65, 0x61, 0xb0, 0x14, 0x94, 0x94, 0xd9, 0x75, 0xcc, 0x47, 0xb1,
	0x7e, 0xd6, 0x19, 0xec, 0x43, 0x7b, 0x58, 0x7c, 0x63, 0x29, 0x9d, 0xe1, 0xdf, 0xb6, 0x7e, 0x0b,
	0x8e, 0x5e, 0x43, 0x4b, 0x92, 0xd1, 0x84, 0x8a, 0xc0, 0xea, 0x39, 0xfd, 0xce, 0xe0, 0x24, 0xd2,
	0x83, 0x22, 0x5d, 0x11, 0x7d, 0x51, 0xe9, 0x0f, 0x85, 0x2c, 0x57, 0xa9, 0xae, 0x0d, 0x5f, 0x82,
	0x77, 0x79, 0x4d, 0xca, 0x1c, 0x1d, 0x82, 0x3d, 0x4c, 0x02, 0xab, 0x67, 0xf5, 0xfd, 0xd4, 0x1e,
	0x26, 0x08, 0x81, 0x5b, 0xb0, 0x9c, 0x06, 0xb6, 0x42, 0xd4, 0x3b, 0xbc, 0xb1, 0xc0, 0x53, 0x24,
	0xe8, 0x04, 0xfc, 0x82, 0x4c, 0xa9, 0xe0, 0x24, 0xa3, 0xba, 0xe9, 0x3f, 0x80, 0x42, 0xd8, 0x13,
	0x15, 0xe9, 0xe7, 0xf9, 0x54, 0xf5, 0x1f, 0xa4, 0x26, 0x46, 0x4f, 0xe0, 0xa0, 0xa4, 0x7c, 0x32,
	0xce, 0xc8, 0x47, 0x92, 0x49, 0x56, 0x06, 0x8e, 0x2a, 0xd8, 0x04, 0x51, 0x04, 0x2d, 0xd5, 0x21,
	0x02, 0x57, 0x1d, 0xf3, 0xf8, 0xce, 0x31, 0x6a, 0xeb, 0x54, 0x57, 0x85, 0x17, 0xd0, 0x69, 0x5c,
	0x87, 0xba, 0xe0, 0x7c, 0xa7, 0x2b, 0xbd, 0x58, 0xf5, 0x44, 0xa7, 0xe0, 0x2d, 0xc8, 0x64, 0x5e,
	0xdf, 0xb3, 0x8d, 0x4f, 0xb5, 0xa7, 0x75, 0xd1, 0x99, 0xfd, 0xd6, 0xc2, 0x13, 0xe8, 0x0c, 0x8b,
	0x9c, 0x2e, 0x13, 0x96, 0xa5, 0x74, 0x86, 0x02, 0x68, 0xcb, 0x92, 0x64, 0xd4, 0x88, 0xb4, 0x0e,
	0x37, 0xb5, 0xb0, 0x6f, 0x6b, 0xf1, 0x14, 0x9c, 0x9c, 0x65, 0xea, 0xca, 0xce, 0xe0, 0x51, 0xa4,
	0x3f, 0x25, 0x1f, 0x45, 0x09, 0xcb, 0xe6, 0x53, 0x5a, 0xc8, 0xb4, 0xca, 0xe3, 0x77, 0x8d, 0x69,
	0x82, 0xef, 0x98, 0x76, 0x04, 0x5e, 0xce, 0xb2, 0x61, 0xa2, 0x27, 0xd5, 0x01, 0xfe, 0x0a, 0xfb,
	0x29, 0x9d, 0xb2, 0x05, 0xbd, 0xe7, 0xb6, 0x86, 0xdd, 0x69, 0xb2, 0xf7, 0x9b, 0xec, 0xbb, 0xb6,
	0xc3, 0x37, 0x16, 0xf8, 0x97, 0xea, 0xc2, 0xfb, 0x6c, 0xf1, 0x0c, 0xbc, 0xd9, 0x9c, 0x96, 0x2b,
	0xad, 0x5a, 0xb7, 0xa1, 0xda, 0x45, 0x85, 0xa7, 0x75, 0xba, 0xda, 0x56, 0x48, 0x52, 0xca, 0xc0,
	0xed, 0x59, 0x7d, 0x37, 0xad, 0x83, 0x0a, 0xcd, 0xd8, 0xbc, 0x90, 0x81, 0xa7, 0x9c, 0x55, 0x07,
	0x78, 0x61, 0x16, 0xdb, 0x29, 0xaf, 0x19, 0x6d, 0xef, 0x1e, 0xfd, 0x1c, 0xdc, 0x9c, 0x65, 0x22,
	0x70, 0x94, 0x3d, 0xb7, 0x7e, 0x57, 0x55, 0x30, 0x78, 0x03, 0xde, 0xfb, 0x7c, 0x3a, 0x2e, 0xd0,
	0x29, 0xb8, 0x95, 0xd7, 0x50, 0x77, 0xd3, 0x7a, 0x74, 0x16, 0x76, 0x6f, 0x9b, 0x11, 0x3f, 0x18,
	0xfc, 0xb5, 0xc0, 0x3b, 0xaf, 0x50, 0xf4, 0x09, 0xf6, 0xd6, 0xce, 0x40, 0x47, 0x8d, 0x4a, 0x63,
	0xcd, 0x70, 0x0b, 0x2a, 0x38, 0x3e, 0xfa, 0xf1, 0xeb, 0xcf, 0x4f, 0xfb, 0xf0, 0xcc, 0x7a, 0x81,
	0xfd, 0x78, 0xbc, 0x66, 0x38, 0x07, 0xdf, 0x7c, 0x4a, 0x74, 0x6c, 0x1a, 0x9b, 0xe6, 0x09, 0xb7,
	0xc1, 0x82, 0xe3, 0x63, 0x45, 0xf8, 0xb0, 0x22, 0x84, 0xb8, 0x34, 0x24, 0x09, 0xb4, 0x6a, 0x61,
	0x11, 0x32, 0x7d, 0xc6, 0x02, 0xe1, 0x1d, 0x4c, 0x70, 0x8c, 0x14, 0xd1, 0x7e, 0x45, 0xd4, 0x8e,
	0x6b, 0xdd, 0x46, 0x2d, 0xf5, 0x6f, 0x7b, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x06, 0x52, 0x26,
	0xf2, 0x2b, 0x05, 0x00, 0x00,
}
